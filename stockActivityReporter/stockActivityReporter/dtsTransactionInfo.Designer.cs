//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace stockActivityReporter {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dtsTransactionInfo")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dtsTransactionInfo : global::System.Data.DataSet {
        
        private dtDetailStockActivityDataTable tabledtDetailStockActivity;
        
        private DataTable11DataTable tableDataTable11;
        
        private dtDetailStockActivityHDrDataTable tabledtDetailStockActivityHDr;
        
        private dtSummaryStockActivityDataTable tabledtSummaryStockActivity;
        
        private dtSummaryStockActivityHDrDataTable tabledtSummaryStockActivityHDr;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtsTransactionInfo() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dtsTransactionInfo(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtDetailStockActivity"] != null)) {
                    base.Tables.Add(new dtDetailStockActivityDataTable(ds.Tables["dtDetailStockActivity"]));
                }
                if ((ds.Tables["DataTable11"] != null)) {
                    base.Tables.Add(new DataTable11DataTable(ds.Tables["DataTable11"]));
                }
                if ((ds.Tables["dtDetailStockActivityHDr"] != null)) {
                    base.Tables.Add(new dtDetailStockActivityHDrDataTable(ds.Tables["dtDetailStockActivityHDr"]));
                }
                if ((ds.Tables["dtSummaryStockActivity"] != null)) {
                    base.Tables.Add(new dtSummaryStockActivityDataTable(ds.Tables["dtSummaryStockActivity"]));
                }
                if ((ds.Tables["dtSummaryStockActivityHDr"] != null)) {
                    base.Tables.Add(new dtSummaryStockActivityHDrDataTable(ds.Tables["dtSummaryStockActivityHDr"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtDetailStockActivityDataTable dtDetailStockActivity {
            get {
                return this.tabledtDetailStockActivity;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable11DataTable DataTable11 {
            get {
                return this.tableDataTable11;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtDetailStockActivityHDrDataTable dtDetailStockActivityHDr {
            get {
                return this.tabledtDetailStockActivityHDr;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtSummaryStockActivityDataTable dtSummaryStockActivity {
            get {
                return this.tabledtSummaryStockActivity;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtSummaryStockActivityHDrDataTable dtSummaryStockActivityHDr {
            get {
                return this.tabledtSummaryStockActivityHDr;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dtsTransactionInfo cln = ((dtsTransactionInfo)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtDetailStockActivity"] != null)) {
                    base.Tables.Add(new dtDetailStockActivityDataTable(ds.Tables["dtDetailStockActivity"]));
                }
                if ((ds.Tables["DataTable11"] != null)) {
                    base.Tables.Add(new DataTable11DataTable(ds.Tables["DataTable11"]));
                }
                if ((ds.Tables["dtDetailStockActivityHDr"] != null)) {
                    base.Tables.Add(new dtDetailStockActivityHDrDataTable(ds.Tables["dtDetailStockActivityHDr"]));
                }
                if ((ds.Tables["dtSummaryStockActivity"] != null)) {
                    base.Tables.Add(new dtSummaryStockActivityDataTable(ds.Tables["dtSummaryStockActivity"]));
                }
                if ((ds.Tables["dtSummaryStockActivityHDr"] != null)) {
                    base.Tables.Add(new dtSummaryStockActivityHDrDataTable(ds.Tables["dtSummaryStockActivityHDr"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtDetailStockActivity = ((dtDetailStockActivityDataTable)(base.Tables["dtDetailStockActivity"]));
            if ((initTable == true)) {
                if ((this.tabledtDetailStockActivity != null)) {
                    this.tabledtDetailStockActivity.InitVars();
                }
            }
            this.tableDataTable11 = ((DataTable11DataTable)(base.Tables["DataTable11"]));
            if ((initTable == true)) {
                if ((this.tableDataTable11 != null)) {
                    this.tableDataTable11.InitVars();
                }
            }
            this.tabledtDetailStockActivityHDr = ((dtDetailStockActivityHDrDataTable)(base.Tables["dtDetailStockActivityHDr"]));
            if ((initTable == true)) {
                if ((this.tabledtDetailStockActivityHDr != null)) {
                    this.tabledtDetailStockActivityHDr.InitVars();
                }
            }
            this.tabledtSummaryStockActivity = ((dtSummaryStockActivityDataTable)(base.Tables["dtSummaryStockActivity"]));
            if ((initTable == true)) {
                if ((this.tabledtSummaryStockActivity != null)) {
                    this.tabledtSummaryStockActivity.InitVars();
                }
            }
            this.tabledtSummaryStockActivityHDr = ((dtSummaryStockActivityHDrDataTable)(base.Tables["dtSummaryStockActivityHDr"]));
            if ((initTable == true)) {
                if ((this.tabledtSummaryStockActivityHDr != null)) {
                    this.tabledtSummaryStockActivityHDr.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dtsTransactionInfo";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dtsTransactionInfo.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtDetailStockActivity = new dtDetailStockActivityDataTable();
            base.Tables.Add(this.tabledtDetailStockActivity);
            this.tableDataTable11 = new DataTable11DataTable();
            base.Tables.Add(this.tableDataTable11);
            this.tabledtDetailStockActivityHDr = new dtDetailStockActivityHDrDataTable();
            base.Tables.Add(this.tabledtDetailStockActivityHDr);
            this.tabledtSummaryStockActivity = new dtSummaryStockActivityDataTable();
            base.Tables.Add(this.tabledtSummaryStockActivity);
            this.tabledtSummaryStockActivityHDr = new dtSummaryStockActivityHDrDataTable();
            base.Tables.Add(this.tabledtSummaryStockActivityHDr);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtDetailStockActivity() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataTable11() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtDetailStockActivityHDr() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtSummaryStockActivity() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtSummaryStockActivityHDr() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dtsTransactionInfo ds = new dtsTransactionInfo();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtDetailStockActivityRowChangeEventHandler(object sender, dtDetailStockActivityRowChangeEvent e);
        
        public delegate void DataTable11RowChangeEventHandler(object sender, DataTable11RowChangeEvent e);
        
        public delegate void dtDetailStockActivityHDrRowChangeEventHandler(object sender, dtDetailStockActivityHDrRowChangeEvent e);
        
        public delegate void dtSummaryStockActivityRowChangeEventHandler(object sender, dtSummaryStockActivityRowChangeEvent e);
        
        public delegate void dtSummaryStockActivityHDrRowChangeEventHandler(object sender, dtSummaryStockActivityHDrRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtDetailStockActivityDataTable : global::System.Data.TypedTableBase<dtDetailStockActivityRow> {
            
            private global::System.Data.DataColumn columnDOCUMENTNO;
            
            private global::System.Data.DataColumn columnMOVEMENTDATE;
            
            private global::System.Data.DataColumn columnPurchases;
            
            private global::System.Data.DataColumn columnTransfers;
            
            private global::System.Data.DataColumn columnTrsfStore;
            
            private global::System.Data.DataColumn columnSales;
            
            private global::System.Data.DataColumn columnOthers;
            
            private global::System.Data.DataColumn columnBalance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityDataTable() {
                this.TableName = "dtDetailStockActivity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtDetailStockActivityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtDetailStockActivityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOCUMENTNOColumn {
                get {
                    return this.columnDOCUMENTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOVEMENTDATEColumn {
                get {
                    return this.columnMOVEMENTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchasesColumn {
                get {
                    return this.columnPurchases;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransfersColumn {
                get {
                    return this.columnTransfers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrsfStoreColumn {
                get {
                    return this.columnTrsfStore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesColumn {
                get {
                    return this.columnSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OthersColumn {
                get {
                    return this.columnOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityRow this[int index] {
                get {
                    return ((dtDetailStockActivityRow)(this.Rows[index]));
                }
            }
            
            public event dtDetailStockActivityRowChangeEventHandler dtDetailStockActivityRowChanging;
            
            public event dtDetailStockActivityRowChangeEventHandler dtDetailStockActivityRowChanged;
            
            public event dtDetailStockActivityRowChangeEventHandler dtDetailStockActivityRowDeleting;
            
            public event dtDetailStockActivityRowChangeEventHandler dtDetailStockActivityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtDetailStockActivityRow(dtDetailStockActivityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityRow AdddtDetailStockActivityRow(string DOCUMENTNO, System.DateTime MOVEMENTDATE, decimal Purchases, decimal Transfers, string TrsfStore, decimal Sales, decimal Others, decimal Balance) {
                dtDetailStockActivityRow rowdtDetailStockActivityRow = ((dtDetailStockActivityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DOCUMENTNO,
                        MOVEMENTDATE,
                        Purchases,
                        Transfers,
                        TrsfStore,
                        Sales,
                        Others,
                        Balance};
                rowdtDetailStockActivityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtDetailStockActivityRow);
                return rowdtDetailStockActivityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtDetailStockActivityDataTable cln = ((dtDetailStockActivityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtDetailStockActivityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDOCUMENTNO = base.Columns["DOCUMENTNO"];
                this.columnMOVEMENTDATE = base.Columns["MOVEMENTDATE"];
                this.columnPurchases = base.Columns["Purchases"];
                this.columnTransfers = base.Columns["Transfers"];
                this.columnTrsfStore = base.Columns["TrsfStore"];
                this.columnSales = base.Columns["Sales"];
                this.columnOthers = base.Columns["Others"];
                this.columnBalance = base.Columns["Balance"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDOCUMENTNO = new global::System.Data.DataColumn("DOCUMENTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCUMENTNO);
                this.columnMOVEMENTDATE = new global::System.Data.DataColumn("MOVEMENTDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOVEMENTDATE);
                this.columnPurchases = new global::System.Data.DataColumn("Purchases", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchases);
                this.columnTransfers = new global::System.Data.DataColumn("Transfers", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransfers);
                this.columnTrsfStore = new global::System.Data.DataColumn("TrsfStore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrsfStore);
                this.columnSales = new global::System.Data.DataColumn("Sales", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales);
                this.columnOthers = new global::System.Data.DataColumn("Others", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOthers);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityRow NewdtDetailStockActivityRow() {
                return ((dtDetailStockActivityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtDetailStockActivityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtDetailStockActivityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtDetailStockActivityRowChanged != null)) {
                    this.dtDetailStockActivityRowChanged(this, new dtDetailStockActivityRowChangeEvent(((dtDetailStockActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtDetailStockActivityRowChanging != null)) {
                    this.dtDetailStockActivityRowChanging(this, new dtDetailStockActivityRowChangeEvent(((dtDetailStockActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtDetailStockActivityRowDeleted != null)) {
                    this.dtDetailStockActivityRowDeleted(this, new dtDetailStockActivityRowChangeEvent(((dtDetailStockActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtDetailStockActivityRowDeleting != null)) {
                    this.dtDetailStockActivityRowDeleting(this, new dtDetailStockActivityRowChangeEvent(((dtDetailStockActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtDetailStockActivityRow(dtDetailStockActivityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsTransactionInfo ds = new dtsTransactionInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtDetailStockActivityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable11DataTable : global::System.Data.TypedTableBase<DataTable11Row> {
            
            private global::System.Data.DataColumn columnM_TRANSACTION_ID;
            
            private global::System.Data.DataColumn columnAD_CLIENT_ID;
            
            private global::System.Data.DataColumn columnAD_ORG_ID;
            
            private global::System.Data.DataColumn columnISACTIVE;
            
            private global::System.Data.DataColumn columnDOCUMENTNO;
            
            private global::System.Data.DataColumn columnMOVEMENTTYPE;
            
            private global::System.Data.DataColumn columnM_LOCATOR_ID;
            
            private global::System.Data.DataColumn columnM_PRODUCT_ID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnMOVEMENTDATE;
            
            private global::System.Data.DataColumn columnMOVEMENTQTY;
            
            private global::System.Data.DataColumn columnM_INVENTORYLINE_ID;
            
            private global::System.Data.DataColumn columnM_MOVEMENTLINE_ID;
            
            private global::System.Data.DataColumn columnM_INOUTLINE_ID;
            
            private global::System.Data.DataColumn columnM_PRODUCTIONLINE_ID;
            
            private global::System.Data.DataColumn columnPurchases;
            
            private global::System.Data.DataColumn columnTransfers;
            
            private global::System.Data.DataColumn columnTrsfStore;
            
            private global::System.Data.DataColumn columnSales;
            
            private global::System.Data.DataColumn columnOthers;
            
            private global::System.Data.DataColumn columnBalance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable11DataTable() {
                this.TableName = "DataTable11";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable11DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataTable11DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M_TRANSACTION_IDColumn {
                get {
                    return this.columnM_TRANSACTION_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AD_CLIENT_IDColumn {
                get {
                    return this.columnAD_CLIENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AD_ORG_IDColumn {
                get {
                    return this.columnAD_ORG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISACTIVEColumn {
                get {
                    return this.columnISACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOCUMENTNOColumn {
                get {
                    return this.columnDOCUMENTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOVEMENTTYPEColumn {
                get {
                    return this.columnMOVEMENTTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M_LOCATOR_IDColumn {
                get {
                    return this.columnM_LOCATOR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M_PRODUCT_IDColumn {
                get {
                    return this.columnM_PRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOVEMENTDATEColumn {
                get {
                    return this.columnMOVEMENTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOVEMENTQTYColumn {
                get {
                    return this.columnMOVEMENTQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M_INVENTORYLINE_IDColumn {
                get {
                    return this.columnM_INVENTORYLINE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M_MOVEMENTLINE_IDColumn {
                get {
                    return this.columnM_MOVEMENTLINE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M_INOUTLINE_IDColumn {
                get {
                    return this.columnM_INOUTLINE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M_PRODUCTIONLINE_IDColumn {
                get {
                    return this.columnM_PRODUCTIONLINE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchasesColumn {
                get {
                    return this.columnPurchases;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransfersColumn {
                get {
                    return this.columnTransfers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrsfStoreColumn {
                get {
                    return this.columnTrsfStore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesColumn {
                get {
                    return this.columnSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OthersColumn {
                get {
                    return this.columnOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable11Row this[int index] {
                get {
                    return ((DataTable11Row)(this.Rows[index]));
                }
            }
            
            public event DataTable11RowChangeEventHandler DataTable11RowChanging;
            
            public event DataTable11RowChangeEventHandler DataTable11RowChanged;
            
            public event DataTable11RowChangeEventHandler DataTable11RowDeleting;
            
            public event DataTable11RowChangeEventHandler DataTable11RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataTable11Row(DataTable11Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable11Row AddDataTable11Row(
                        string M_TRANSACTION_ID, 
                        string AD_CLIENT_ID, 
                        string AD_ORG_ID, 
                        string ISACTIVE, 
                        string DOCUMENTNO, 
                        string MOVEMENTTYPE, 
                        string M_LOCATOR_ID, 
                        string M_PRODUCT_ID, 
                        string NAME, 
                        System.DateTime MOVEMENTDATE, 
                        decimal MOVEMENTQTY, 
                        string M_INVENTORYLINE_ID, 
                        string M_MOVEMENTLINE_ID, 
                        string M_INOUTLINE_ID, 
                        string M_PRODUCTIONLINE_ID, 
                        decimal Purchases, 
                        decimal Transfers, 
                        decimal TrsfStore, 
                        decimal Sales, 
                        decimal Others, 
                        decimal Balance) {
                DataTable11Row rowDataTable11Row = ((DataTable11Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        M_TRANSACTION_ID,
                        AD_CLIENT_ID,
                        AD_ORG_ID,
                        ISACTIVE,
                        DOCUMENTNO,
                        MOVEMENTTYPE,
                        M_LOCATOR_ID,
                        M_PRODUCT_ID,
                        NAME,
                        MOVEMENTDATE,
                        MOVEMENTQTY,
                        M_INVENTORYLINE_ID,
                        M_MOVEMENTLINE_ID,
                        M_INOUTLINE_ID,
                        M_PRODUCTIONLINE_ID,
                        Purchases,
                        Transfers,
                        TrsfStore,
                        Sales,
                        Others,
                        Balance};
                rowDataTable11Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable11Row);
                return rowDataTable11Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable11Row FindByM_TRANSACTION_ID(string M_TRANSACTION_ID) {
                return ((DataTable11Row)(this.Rows.Find(new object[] {
                            M_TRANSACTION_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataTable11DataTable cln = ((DataTable11DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable11DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnM_TRANSACTION_ID = base.Columns["M_TRANSACTION_ID"];
                this.columnAD_CLIENT_ID = base.Columns["AD_CLIENT_ID"];
                this.columnAD_ORG_ID = base.Columns["AD_ORG_ID"];
                this.columnISACTIVE = base.Columns["ISACTIVE"];
                this.columnDOCUMENTNO = base.Columns["DOCUMENTNO"];
                this.columnMOVEMENTTYPE = base.Columns["MOVEMENTTYPE"];
                this.columnM_LOCATOR_ID = base.Columns["M_LOCATOR_ID"];
                this.columnM_PRODUCT_ID = base.Columns["M_PRODUCT_ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnMOVEMENTDATE = base.Columns["MOVEMENTDATE"];
                this.columnMOVEMENTQTY = base.Columns["MOVEMENTQTY"];
                this.columnM_INVENTORYLINE_ID = base.Columns["M_INVENTORYLINE_ID"];
                this.columnM_MOVEMENTLINE_ID = base.Columns["M_MOVEMENTLINE_ID"];
                this.columnM_INOUTLINE_ID = base.Columns["M_INOUTLINE_ID"];
                this.columnM_PRODUCTIONLINE_ID = base.Columns["M_PRODUCTIONLINE_ID"];
                this.columnPurchases = base.Columns["Purchases"];
                this.columnTransfers = base.Columns["Transfers"];
                this.columnTrsfStore = base.Columns["TrsfStore"];
                this.columnSales = base.Columns["Sales"];
                this.columnOthers = base.Columns["Others"];
                this.columnBalance = base.Columns["Balance"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnM_TRANSACTION_ID = new global::System.Data.DataColumn("M_TRANSACTION_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_TRANSACTION_ID);
                this.columnAD_CLIENT_ID = new global::System.Data.DataColumn("AD_CLIENT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAD_CLIENT_ID);
                this.columnAD_ORG_ID = new global::System.Data.DataColumn("AD_ORG_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAD_ORG_ID);
                this.columnISACTIVE = new global::System.Data.DataColumn("ISACTIVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISACTIVE);
                this.columnDOCUMENTNO = new global::System.Data.DataColumn("DOCUMENTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCUMENTNO);
                this.columnMOVEMENTTYPE = new global::System.Data.DataColumn("MOVEMENTTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOVEMENTTYPE);
                this.columnM_LOCATOR_ID = new global::System.Data.DataColumn("M_LOCATOR_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_LOCATOR_ID);
                this.columnM_PRODUCT_ID = new global::System.Data.DataColumn("M_PRODUCT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_PRODUCT_ID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnMOVEMENTDATE = new global::System.Data.DataColumn("MOVEMENTDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOVEMENTDATE);
                this.columnMOVEMENTQTY = new global::System.Data.DataColumn("MOVEMENTQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOVEMENTQTY);
                this.columnM_INVENTORYLINE_ID = new global::System.Data.DataColumn("M_INVENTORYLINE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_INVENTORYLINE_ID);
                this.columnM_MOVEMENTLINE_ID = new global::System.Data.DataColumn("M_MOVEMENTLINE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_MOVEMENTLINE_ID);
                this.columnM_INOUTLINE_ID = new global::System.Data.DataColumn("M_INOUTLINE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_INOUTLINE_ID);
                this.columnM_PRODUCTIONLINE_ID = new global::System.Data.DataColumn("M_PRODUCTIONLINE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_PRODUCTIONLINE_ID);
                this.columnPurchases = new global::System.Data.DataColumn("Purchases", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchases);
                this.columnTransfers = new global::System.Data.DataColumn("Transfers", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransfers);
                this.columnTrsfStore = new global::System.Data.DataColumn("TrsfStore", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrsfStore);
                this.columnSales = new global::System.Data.DataColumn("Sales", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales);
                this.columnOthers = new global::System.Data.DataColumn("Others", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOthers);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnM_TRANSACTION_ID}, true));
                this.columnM_TRANSACTION_ID.AllowDBNull = false;
                this.columnM_TRANSACTION_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable11Row NewDataTable11Row() {
                return ((DataTable11Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable11Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable11Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable11RowChanged != null)) {
                    this.DataTable11RowChanged(this, new DataTable11RowChangeEvent(((DataTable11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable11RowChanging != null)) {
                    this.DataTable11RowChanging(this, new DataTable11RowChangeEvent(((DataTable11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable11RowDeleted != null)) {
                    this.DataTable11RowDeleted(this, new DataTable11RowChangeEvent(((DataTable11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable11RowDeleting != null)) {
                    this.DataTable11RowDeleting(this, new DataTable11RowChangeEvent(((DataTable11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataTable11Row(DataTable11Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsTransactionInfo ds = new dtsTransactionInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable11DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtDetailStockActivityHDrDataTable : global::System.Data.TypedTableBase<dtDetailStockActivityHDrRow> {
            
            private global::System.Data.DataColumn columnStore;
            
            private global::System.Data.DataColumn columnProduct;
            
            private global::System.Data.DataColumn columnActivity_Range;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityHDrDataTable() {
                this.TableName = "dtDetailStockActivityHDr";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtDetailStockActivityHDrDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtDetailStockActivityHDrDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreColumn {
                get {
                    return this.columnStore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductColumn {
                get {
                    return this.columnProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Activity_RangeColumn {
                get {
                    return this.columnActivity_Range;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityHDrRow this[int index] {
                get {
                    return ((dtDetailStockActivityHDrRow)(this.Rows[index]));
                }
            }
            
            public event dtDetailStockActivityHDrRowChangeEventHandler dtDetailStockActivityHDrRowChanging;
            
            public event dtDetailStockActivityHDrRowChangeEventHandler dtDetailStockActivityHDrRowChanged;
            
            public event dtDetailStockActivityHDrRowChangeEventHandler dtDetailStockActivityHDrRowDeleting;
            
            public event dtDetailStockActivityHDrRowChangeEventHandler dtDetailStockActivityHDrRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtDetailStockActivityHDrRow(dtDetailStockActivityHDrRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityHDrRow AdddtDetailStockActivityHDrRow(string Store, string Product, string Activity_Range) {
                dtDetailStockActivityHDrRow rowdtDetailStockActivityHDrRow = ((dtDetailStockActivityHDrRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Store,
                        Product,
                        Activity_Range};
                rowdtDetailStockActivityHDrRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtDetailStockActivityHDrRow);
                return rowdtDetailStockActivityHDrRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtDetailStockActivityHDrDataTable cln = ((dtDetailStockActivityHDrDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtDetailStockActivityHDrDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStore = base.Columns["Store"];
                this.columnProduct = base.Columns["Product"];
                this.columnActivity_Range = base.Columns["Activity Range"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStore = new global::System.Data.DataColumn("Store", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStore);
                this.columnProduct = new global::System.Data.DataColumn("Product", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct);
                this.columnActivity_Range = new global::System.Data.DataColumn("Activity Range", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivity_Range);
                this.columnStore.AllowDBNull = false;
                this.columnStore.Caption = "M_TRANSACTION_ID";
                this.columnProduct.Caption = "NAME";
                this.columnActivity_Range.Caption = "MOVEMENTDATE";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityHDrRow NewdtDetailStockActivityHDrRow() {
                return ((dtDetailStockActivityHDrRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtDetailStockActivityHDrRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtDetailStockActivityHDrRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtDetailStockActivityHDrRowChanged != null)) {
                    this.dtDetailStockActivityHDrRowChanged(this, new dtDetailStockActivityHDrRowChangeEvent(((dtDetailStockActivityHDrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtDetailStockActivityHDrRowChanging != null)) {
                    this.dtDetailStockActivityHDrRowChanging(this, new dtDetailStockActivityHDrRowChangeEvent(((dtDetailStockActivityHDrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtDetailStockActivityHDrRowDeleted != null)) {
                    this.dtDetailStockActivityHDrRowDeleted(this, new dtDetailStockActivityHDrRowChangeEvent(((dtDetailStockActivityHDrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtDetailStockActivityHDrRowDeleting != null)) {
                    this.dtDetailStockActivityHDrRowDeleting(this, new dtDetailStockActivityHDrRowChangeEvent(((dtDetailStockActivityHDrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtDetailStockActivityHDrRow(dtDetailStockActivityHDrRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsTransactionInfo ds = new dtsTransactionInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtDetailStockActivityHDrDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtSummaryStockActivityDataTable : global::System.Data.TypedTableBase<dtSummaryStockActivityRow> {
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnVALUE;
            
            private global::System.Data.DataColumn columnBBF;
            
            private global::System.Data.DataColumn columnPurchases;
            
            private global::System.Data.DataColumn columnTRF_IN;
            
            private global::System.Data.DataColumn columnTRF_OUT;
            
            private global::System.Data.DataColumn columnSales;
            
            private global::System.Data.DataColumn columnOthers;
            
            private global::System.Data.DataColumn columnBalance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityDataTable() {
                this.TableName = "dtSummaryStockActivity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSummaryStockActivityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtSummaryStockActivityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEColumn {
                get {
                    return this.columnVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BBFColumn {
                get {
                    return this.columnBBF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchasesColumn {
                get {
                    return this.columnPurchases;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRF_INColumn {
                get {
                    return this.columnTRF_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRF_OUTColumn {
                get {
                    return this.columnTRF_OUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesColumn {
                get {
                    return this.columnSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OthersColumn {
                get {
                    return this.columnOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityRow this[int index] {
                get {
                    return ((dtSummaryStockActivityRow)(this.Rows[index]));
                }
            }
            
            public event dtSummaryStockActivityRowChangeEventHandler dtSummaryStockActivityRowChanging;
            
            public event dtSummaryStockActivityRowChangeEventHandler dtSummaryStockActivityRowChanged;
            
            public event dtSummaryStockActivityRowChangeEventHandler dtSummaryStockActivityRowDeleting;
            
            public event dtSummaryStockActivityRowChangeEventHandler dtSummaryStockActivityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtSummaryStockActivityRow(dtSummaryStockActivityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityRow AdddtSummaryStockActivityRow(string NAME, string VALUE, decimal BBF, decimal Purchases, decimal TRF_IN, decimal TRF_OUT, decimal Sales, decimal Others, decimal Balance) {
                dtSummaryStockActivityRow rowdtSummaryStockActivityRow = ((dtSummaryStockActivityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NAME,
                        VALUE,
                        BBF,
                        Purchases,
                        TRF_IN,
                        TRF_OUT,
                        Sales,
                        Others,
                        Balance};
                rowdtSummaryStockActivityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtSummaryStockActivityRow);
                return rowdtSummaryStockActivityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtSummaryStockActivityDataTable cln = ((dtSummaryStockActivityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtSummaryStockActivityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNAME = base.Columns["NAME"];
                this.columnVALUE = base.Columns["VALUE"];
                this.columnBBF = base.Columns["BBF"];
                this.columnPurchases = base.Columns["Purchases"];
                this.columnTRF_IN = base.Columns["TRF_IN"];
                this.columnTRF_OUT = base.Columns["TRF_OUT"];
                this.columnSales = base.Columns["Sales"];
                this.columnOthers = base.Columns["Others"];
                this.columnBalance = base.Columns["Balance"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnVALUE = new global::System.Data.DataColumn("VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE);
                this.columnBBF = new global::System.Data.DataColumn("BBF", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBBF);
                this.columnPurchases = new global::System.Data.DataColumn("Purchases", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchases);
                this.columnTRF_IN = new global::System.Data.DataColumn("TRF_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRF_IN);
                this.columnTRF_OUT = new global::System.Data.DataColumn("TRF_OUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRF_OUT);
                this.columnSales = new global::System.Data.DataColumn("Sales", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales);
                this.columnOthers = new global::System.Data.DataColumn("Others", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOthers);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityRow NewdtSummaryStockActivityRow() {
                return ((dtSummaryStockActivityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtSummaryStockActivityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtSummaryStockActivityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtSummaryStockActivityRowChanged != null)) {
                    this.dtSummaryStockActivityRowChanged(this, new dtSummaryStockActivityRowChangeEvent(((dtSummaryStockActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtSummaryStockActivityRowChanging != null)) {
                    this.dtSummaryStockActivityRowChanging(this, new dtSummaryStockActivityRowChangeEvent(((dtSummaryStockActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtSummaryStockActivityRowDeleted != null)) {
                    this.dtSummaryStockActivityRowDeleted(this, new dtSummaryStockActivityRowChangeEvent(((dtSummaryStockActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtSummaryStockActivityRowDeleting != null)) {
                    this.dtSummaryStockActivityRowDeleting(this, new dtSummaryStockActivityRowChangeEvent(((dtSummaryStockActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtSummaryStockActivityRow(dtSummaryStockActivityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsTransactionInfo ds = new dtsTransactionInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtSummaryStockActivityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtSummaryStockActivityHDrDataTable : global::System.Data.TypedTableBase<dtSummaryStockActivityHDrRow> {
            
            private global::System.Data.DataColumn columnActivity_Range;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityHDrDataTable() {
                this.TableName = "dtSummaryStockActivityHDr";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSummaryStockActivityHDrDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtSummaryStockActivityHDrDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Activity_RangeColumn {
                get {
                    return this.columnActivity_Range;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityHDrRow this[int index] {
                get {
                    return ((dtSummaryStockActivityHDrRow)(this.Rows[index]));
                }
            }
            
            public event dtSummaryStockActivityHDrRowChangeEventHandler dtSummaryStockActivityHDrRowChanging;
            
            public event dtSummaryStockActivityHDrRowChangeEventHandler dtSummaryStockActivityHDrRowChanged;
            
            public event dtSummaryStockActivityHDrRowChangeEventHandler dtSummaryStockActivityHDrRowDeleting;
            
            public event dtSummaryStockActivityHDrRowChangeEventHandler dtSummaryStockActivityHDrRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtSummaryStockActivityHDrRow(dtSummaryStockActivityHDrRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityHDrRow AdddtSummaryStockActivityHDrRow(string Activity_Range) {
                dtSummaryStockActivityHDrRow rowdtSummaryStockActivityHDrRow = ((dtSummaryStockActivityHDrRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Activity_Range};
                rowdtSummaryStockActivityHDrRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtSummaryStockActivityHDrRow);
                return rowdtSummaryStockActivityHDrRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtSummaryStockActivityHDrDataTable cln = ((dtSummaryStockActivityHDrDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtSummaryStockActivityHDrDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnActivity_Range = base.Columns["Activity Range"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnActivity_Range = new global::System.Data.DataColumn("Activity Range", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivity_Range);
                this.columnActivity_Range.Caption = "MOVEMENTDATE";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityHDrRow NewdtSummaryStockActivityHDrRow() {
                return ((dtSummaryStockActivityHDrRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtSummaryStockActivityHDrRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtSummaryStockActivityHDrRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtSummaryStockActivityHDrRowChanged != null)) {
                    this.dtSummaryStockActivityHDrRowChanged(this, new dtSummaryStockActivityHDrRowChangeEvent(((dtSummaryStockActivityHDrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtSummaryStockActivityHDrRowChanging != null)) {
                    this.dtSummaryStockActivityHDrRowChanging(this, new dtSummaryStockActivityHDrRowChangeEvent(((dtSummaryStockActivityHDrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtSummaryStockActivityHDrRowDeleted != null)) {
                    this.dtSummaryStockActivityHDrRowDeleted(this, new dtSummaryStockActivityHDrRowChangeEvent(((dtSummaryStockActivityHDrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtSummaryStockActivityHDrRowDeleting != null)) {
                    this.dtSummaryStockActivityHDrRowDeleting(this, new dtSummaryStockActivityHDrRowChangeEvent(((dtSummaryStockActivityHDrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtSummaryStockActivityHDrRow(dtSummaryStockActivityHDrRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsTransactionInfo ds = new dtsTransactionInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtSummaryStockActivityHDrDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtDetailStockActivityRow : global::System.Data.DataRow {
            
            private dtDetailStockActivityDataTable tabledtDetailStockActivity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtDetailStockActivityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtDetailStockActivity = ((dtDetailStockActivityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOCUMENTNO {
                get {
                    try {
                        return ((string)(this[this.tabledtDetailStockActivity.DOCUMENTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOCUMENTNO\' in table \'dtDetailStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDetailStockActivity.DOCUMENTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MOVEMENTDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtDetailStockActivity.MOVEMENTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOVEMENTDATE\' in table \'dtDetailStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDetailStockActivity.MOVEMENTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchases {
                get {
                    try {
                        return ((decimal)(this[this.tabledtDetailStockActivity.PurchasesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchases\' in table \'dtDetailStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDetailStockActivity.PurchasesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Transfers {
                get {
                    try {
                        return ((decimal)(this[this.tabledtDetailStockActivity.TransfersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transfers\' in table \'dtDetailStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDetailStockActivity.TransfersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrsfStore {
                get {
                    try {
                        return ((string)(this[this.tabledtDetailStockActivity.TrsfStoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrsfStore\' in table \'dtDetailStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDetailStockActivity.TrsfStoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sales {
                get {
                    try {
                        return ((decimal)(this[this.tabledtDetailStockActivity.SalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales\' in table \'dtDetailStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDetailStockActivity.SalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Others {
                get {
                    try {
                        return ((decimal)(this[this.tabledtDetailStockActivity.OthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Others\' in table \'dtDetailStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDetailStockActivity.OthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tabledtDetailStockActivity.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'dtDetailStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDetailStockActivity.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOCUMENTNONull() {
                return this.IsNull(this.tabledtDetailStockActivity.DOCUMENTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOCUMENTNONull() {
                this[this.tabledtDetailStockActivity.DOCUMENTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOVEMENTDATENull() {
                return this.IsNull(this.tabledtDetailStockActivity.MOVEMENTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOVEMENTDATENull() {
                this[this.tabledtDetailStockActivity.MOVEMENTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchasesNull() {
                return this.IsNull(this.tabledtDetailStockActivity.PurchasesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchasesNull() {
                this[this.tabledtDetailStockActivity.PurchasesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransfersNull() {
                return this.IsNull(this.tabledtDetailStockActivity.TransfersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransfersNull() {
                this[this.tabledtDetailStockActivity.TransfersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrsfStoreNull() {
                return this.IsNull(this.tabledtDetailStockActivity.TrsfStoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrsfStoreNull() {
                this[this.tabledtDetailStockActivity.TrsfStoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesNull() {
                return this.IsNull(this.tabledtDetailStockActivity.SalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesNull() {
                this[this.tabledtDetailStockActivity.SalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOthersNull() {
                return this.IsNull(this.tabledtDetailStockActivity.OthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOthersNull() {
                this[this.tabledtDetailStockActivity.OthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tabledtDetailStockActivity.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tabledtDetailStockActivity.BalanceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataTable11Row : global::System.Data.DataRow {
            
            private DataTable11DataTable tableDataTable11;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable11Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable11 = ((DataTable11DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M_TRANSACTION_ID {
                get {
                    return ((string)(this[this.tableDataTable11.M_TRANSACTION_IDColumn]));
                }
                set {
                    this[this.tableDataTable11.M_TRANSACTION_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AD_CLIENT_ID {
                get {
                    try {
                        return ((string)(this[this.tableDataTable11.AD_CLIENT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AD_CLIENT_ID\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.AD_CLIENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AD_ORG_ID {
                get {
                    try {
                        return ((string)(this[this.tableDataTable11.AD_ORG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AD_ORG_ID\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.AD_ORG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISACTIVE {
                get {
                    try {
                        return ((string)(this[this.tableDataTable11.ISACTIVEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISACTIVE\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.ISACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOCUMENTNO {
                get {
                    try {
                        return ((string)(this[this.tableDataTable11.DOCUMENTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOCUMENTNO\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.DOCUMENTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MOVEMENTTYPE {
                get {
                    try {
                        return ((string)(this[this.tableDataTable11.MOVEMENTTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOVEMENTTYPE\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.MOVEMENTTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M_LOCATOR_ID {
                get {
                    try {
                        return ((string)(this[this.tableDataTable11.M_LOCATOR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M_LOCATOR_ID\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.M_LOCATOR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M_PRODUCT_ID {
                get {
                    try {
                        return ((string)(this[this.tableDataTable11.M_PRODUCT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M_PRODUCT_ID\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.M_PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableDataTable11.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MOVEMENTDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable11.MOVEMENTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOVEMENTDATE\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.MOVEMENTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MOVEMENTQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable11.MOVEMENTQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOVEMENTQTY\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.MOVEMENTQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M_INVENTORYLINE_ID {
                get {
                    if (this.IsM_INVENTORYLINE_IDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDataTable11.M_INVENTORYLINE_IDColumn]));
                    }
                }
                set {
                    this[this.tableDataTable11.M_INVENTORYLINE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M_MOVEMENTLINE_ID {
                get {
                    if (this.IsM_MOVEMENTLINE_IDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDataTable11.M_MOVEMENTLINE_IDColumn]));
                    }
                }
                set {
                    this[this.tableDataTable11.M_MOVEMENTLINE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M_INOUTLINE_ID {
                get {
                    if (this.IsM_INOUTLINE_IDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDataTable11.M_INOUTLINE_IDColumn]));
                    }
                }
                set {
                    this[this.tableDataTable11.M_INOUTLINE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M_PRODUCTIONLINE_ID {
                get {
                    if (this.IsM_PRODUCTIONLINE_IDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDataTable11.M_PRODUCTIONLINE_IDColumn]));
                    }
                }
                set {
                    this[this.tableDataTable11.M_PRODUCTIONLINE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchases {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable11.PurchasesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchases\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.PurchasesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Transfers {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable11.TransfersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transfers\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.TransfersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TrsfStore {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable11.TrsfStoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrsfStore\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.TrsfStoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sales {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable11.SalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.SalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Others {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable11.OthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Others\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.OthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable11.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'DataTable11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable11.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAD_CLIENT_IDNull() {
                return this.IsNull(this.tableDataTable11.AD_CLIENT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAD_CLIENT_IDNull() {
                this[this.tableDataTable11.AD_CLIENT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAD_ORG_IDNull() {
                return this.IsNull(this.tableDataTable11.AD_ORG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAD_ORG_IDNull() {
                this[this.tableDataTable11.AD_ORG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISACTIVENull() {
                return this.IsNull(this.tableDataTable11.ISACTIVEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISACTIVENull() {
                this[this.tableDataTable11.ISACTIVEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOCUMENTNONull() {
                return this.IsNull(this.tableDataTable11.DOCUMENTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOCUMENTNONull() {
                this[this.tableDataTable11.DOCUMENTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOVEMENTTYPENull() {
                return this.IsNull(this.tableDataTable11.MOVEMENTTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOVEMENTTYPENull() {
                this[this.tableDataTable11.MOVEMENTTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM_LOCATOR_IDNull() {
                return this.IsNull(this.tableDataTable11.M_LOCATOR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM_LOCATOR_IDNull() {
                this[this.tableDataTable11.M_LOCATOR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM_PRODUCT_IDNull() {
                return this.IsNull(this.tableDataTable11.M_PRODUCT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM_PRODUCT_IDNull() {
                this[this.tableDataTable11.M_PRODUCT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableDataTable11.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableDataTable11.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOVEMENTDATENull() {
                return this.IsNull(this.tableDataTable11.MOVEMENTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOVEMENTDATENull() {
                this[this.tableDataTable11.MOVEMENTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOVEMENTQTYNull() {
                return this.IsNull(this.tableDataTable11.MOVEMENTQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOVEMENTQTYNull() {
                this[this.tableDataTable11.MOVEMENTQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM_INVENTORYLINE_IDNull() {
                return this.IsNull(this.tableDataTable11.M_INVENTORYLINE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM_INVENTORYLINE_IDNull() {
                this[this.tableDataTable11.M_INVENTORYLINE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM_MOVEMENTLINE_IDNull() {
                return this.IsNull(this.tableDataTable11.M_MOVEMENTLINE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM_MOVEMENTLINE_IDNull() {
                this[this.tableDataTable11.M_MOVEMENTLINE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM_INOUTLINE_IDNull() {
                return this.IsNull(this.tableDataTable11.M_INOUTLINE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM_INOUTLINE_IDNull() {
                this[this.tableDataTable11.M_INOUTLINE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM_PRODUCTIONLINE_IDNull() {
                return this.IsNull(this.tableDataTable11.M_PRODUCTIONLINE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM_PRODUCTIONLINE_IDNull() {
                this[this.tableDataTable11.M_PRODUCTIONLINE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchasesNull() {
                return this.IsNull(this.tableDataTable11.PurchasesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchasesNull() {
                this[this.tableDataTable11.PurchasesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransfersNull() {
                return this.IsNull(this.tableDataTable11.TransfersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransfersNull() {
                this[this.tableDataTable11.TransfersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrsfStoreNull() {
                return this.IsNull(this.tableDataTable11.TrsfStoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrsfStoreNull() {
                this[this.tableDataTable11.TrsfStoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesNull() {
                return this.IsNull(this.tableDataTable11.SalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesNull() {
                this[this.tableDataTable11.SalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOthersNull() {
                return this.IsNull(this.tableDataTable11.OthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOthersNull() {
                this[this.tableDataTable11.OthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tableDataTable11.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tableDataTable11.BalanceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtDetailStockActivityHDrRow : global::System.Data.DataRow {
            
            private dtDetailStockActivityHDrDataTable tabledtDetailStockActivityHDr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtDetailStockActivityHDrRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtDetailStockActivityHDr = ((dtDetailStockActivityHDrDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Store {
                get {
                    return ((string)(this[this.tabledtDetailStockActivityHDr.StoreColumn]));
                }
                set {
                    this[this.tabledtDetailStockActivityHDr.StoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product {
                get {
                    try {
                        return ((string)(this[this.tabledtDetailStockActivityHDr.ProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product\' in table \'dtDetailStockActivityHDr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDetailStockActivityHDr.ProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Activity_Range {
                get {
                    try {
                        return ((string)(this[this.tabledtDetailStockActivityHDr.Activity_RangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Activity Range\' in table \'dtDetailStockActivityHDr\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledtDetailStockActivityHDr.Activity_RangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNull() {
                return this.IsNull(this.tabledtDetailStockActivityHDr.ProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNull() {
                this[this.tabledtDetailStockActivityHDr.ProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActivity_RangeNull() {
                return this.IsNull(this.tabledtDetailStockActivityHDr.Activity_RangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActivity_RangeNull() {
                this[this.tabledtDetailStockActivityHDr.Activity_RangeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtSummaryStockActivityRow : global::System.Data.DataRow {
            
            private dtSummaryStockActivityDataTable tabledtSummaryStockActivity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSummaryStockActivityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtSummaryStockActivity = ((dtSummaryStockActivityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tabledtSummaryStockActivity.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME\' in table \'dtSummaryStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSummaryStockActivity.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUE {
                get {
                    try {
                        return ((string)(this[this.tabledtSummaryStockActivity.VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALUE\' in table \'dtSummaryStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSummaryStockActivity.VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BBF {
                get {
                    try {
                        return ((decimal)(this[this.tabledtSummaryStockActivity.BBFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BBF\' in table \'dtSummaryStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSummaryStockActivity.BBFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Purchases {
                get {
                    try {
                        return ((decimal)(this[this.tabledtSummaryStockActivity.PurchasesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchases\' in table \'dtSummaryStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSummaryStockActivity.PurchasesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRF_IN {
                get {
                    try {
                        return ((decimal)(this[this.tabledtSummaryStockActivity.TRF_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRF_IN\' in table \'dtSummaryStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSummaryStockActivity.TRF_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRF_OUT {
                get {
                    try {
                        return ((decimal)(this[this.tabledtSummaryStockActivity.TRF_OUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRF_OUT\' in table \'dtSummaryStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSummaryStockActivity.TRF_OUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sales {
                get {
                    try {
                        return ((decimal)(this[this.tabledtSummaryStockActivity.SalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales\' in table \'dtSummaryStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSummaryStockActivity.SalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Others {
                get {
                    try {
                        return ((decimal)(this[this.tabledtSummaryStockActivity.OthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Others\' in table \'dtSummaryStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSummaryStockActivity.OthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tabledtSummaryStockActivity.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'dtSummaryStockActivity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSummaryStockActivity.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tabledtSummaryStockActivity.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tabledtSummaryStockActivity.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVALUENull() {
                return this.IsNull(this.tabledtSummaryStockActivity.VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVALUENull() {
                this[this.tabledtSummaryStockActivity.VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBBFNull() {
                return this.IsNull(this.tabledtSummaryStockActivity.BBFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBBFNull() {
                this[this.tabledtSummaryStockActivity.BBFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchasesNull() {
                return this.IsNull(this.tabledtSummaryStockActivity.PurchasesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchasesNull() {
                this[this.tabledtSummaryStockActivity.PurchasesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRF_INNull() {
                return this.IsNull(this.tabledtSummaryStockActivity.TRF_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRF_INNull() {
                this[this.tabledtSummaryStockActivity.TRF_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRF_OUTNull() {
                return this.IsNull(this.tabledtSummaryStockActivity.TRF_OUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRF_OUTNull() {
                this[this.tabledtSummaryStockActivity.TRF_OUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesNull() {
                return this.IsNull(this.tabledtSummaryStockActivity.SalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesNull() {
                this[this.tabledtSummaryStockActivity.SalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOthersNull() {
                return this.IsNull(this.tabledtSummaryStockActivity.OthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOthersNull() {
                this[this.tabledtSummaryStockActivity.OthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tabledtSummaryStockActivity.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tabledtSummaryStockActivity.BalanceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtSummaryStockActivityHDrRow : global::System.Data.DataRow {
            
            private dtSummaryStockActivityHDrDataTable tabledtSummaryStockActivityHDr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSummaryStockActivityHDrRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtSummaryStockActivityHDr = ((dtSummaryStockActivityHDrDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Activity_Range {
                get {
                    try {
                        return ((string)(this[this.tabledtSummaryStockActivityHDr.Activity_RangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Activity Range\' in table \'dtSummaryStockActivityHDr\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledtSummaryStockActivityHDr.Activity_RangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActivity_RangeNull() {
                return this.IsNull(this.tabledtSummaryStockActivityHDr.Activity_RangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActivity_RangeNull() {
                this[this.tabledtSummaryStockActivityHDr.Activity_RangeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtDetailStockActivityRowChangeEvent : global::System.EventArgs {
            
            private dtDetailStockActivityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityRowChangeEvent(dtDetailStockActivityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataTable11RowChangeEvent : global::System.EventArgs {
            
            private DataTable11Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable11RowChangeEvent(DataTable11Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable11Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtDetailStockActivityHDrRowChangeEvent : global::System.EventArgs {
            
            private dtDetailStockActivityHDrRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityHDrRowChangeEvent(dtDetailStockActivityHDrRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDetailStockActivityHDrRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtSummaryStockActivityRowChangeEvent : global::System.EventArgs {
            
            private dtSummaryStockActivityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityRowChangeEvent(dtSummaryStockActivityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtSummaryStockActivityHDrRowChangeEvent : global::System.EventArgs {
            
            private dtSummaryStockActivityHDrRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityHDrRowChangeEvent(dtSummaryStockActivityHDrRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSummaryStockActivityHDrRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591