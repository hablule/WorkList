using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;

namespace EasyMove
{

    enum triStateBool
    { yes,
        No,
        ignor }

    enum dmlType
    {
        Select,
        Insert,
        Update,
        Delete
    }


    public enum taskType
    {
        Unkown,
        Request,
        Order,
        Dispatch,
        Receive,
        In,
        Make,
        Makeup,
        Out
    }

    enum recordType
    {
        unkown,
        New,
        Existing
    }

    enum recordStatus
    {
        Unknown,
        Drafted,
        Dispatched,
        Received,
        Accepted,
        Disputed,
        ReDispatched,
        Approved,
        Requested,
        Ordered,
        Satisfied,
        Closed,
        Cancelled
    }

    enum actionTake
    {
        saved,
        deleted,
        confirmed,
        rejected,
        disputed,
        unknown
    }


    enum codeRequested
    {
        ManualDoc,
        OpenTransfer,
        Inventory,
        SourceNotFound,
        None
    };

    static class codeRequestedMethods
    {
        public static int GetCodeValue(this codeRequested codeR)
        {
            switch (codeR)
            {
                case codeRequested.ManualDoc:
                    return -1;
                case codeRequested.OpenTransfer:
                    return 1;
                case codeRequested.Inventory:
                    return 1;
                case codeRequested.SourceNotFound:
                    return 1;
                case codeRequested.None:
                    return -1;
                default:
                    return 4;
            }
        }
    }


    class statusSequence
    {
        public static string[] moveTransactionSequence = {transactionStatusInformation.newDispatch,
                                                          transactionStatusInformation.confirmedDispatch,
                                                          transactionStatusInformation.deliveryReceived,
                                                          transactionStatusInformation.deliveryDisputed,
                                                          transactionStatusInformation.disputeRejected,
                                                          transactionStatusInformation.deliveryAccepted,
                                                          transactionStatusInformation.disputeAccepted
                                                         };

        public static string[] orderTransactionSequence = { transactionStatusInformation.newOrder,
                                                              transactionStatusInformation.approvedOrder
                                                            };

        public static string[] requestTransactionSequence = { transactionStatusInformation.newRequest,
                                                              transactionStatusInformation.confirmedRequest,
                                                              transactionStatusInformation.approvedRequest,
                                                              transactionStatusInformation.satisfiedRequest,
                                                              transactionStatusInformation.rejectedRequest
                                                            };
    }


    class dbSettingInformationHandler
    {
        public static string settingFilePath = "settings.xml";
        public static string settingFilePath_bkp = "settingscp.xml";
        public static string encryptionSecurityKey = "myKy24/7";
        public static bool documentNumberAutoGenerated = false;
        
        public static string DataBaseType = "MySql";
        public static string ServerHostName = "";
        public static string DataBaseName = "";
        public static string DBUserName = "";
        public static string DBPassword = "";
        public static string ScriptDirectory = "";
        public static string WarningDirectory = "";
        public static string ErrorDirectory = "";
        public static string DBPort = "";
        public static string PrinterName = "";
        public static bool LogChangeScript = false;
        public static string theme = "";

    }

    class generalResultInformation
    {
        //public static bool Os64bIT = false;
        public static string MyOdbcDrvr = "MySQL ODBC 3.51 Driver";

        public static string clientId = "1000000";
        public static string organiztionId = "";
        public static string Station = "";
        public static string userId = "";
        public static string userName = "";
        public static string userBPName = "";

        public static bool logedIn = false;
        
        public static int userLoginTrials = 5;
        public static int dbConfigTrials = 3;

        public static string unkownDocumentBaseType = "MMM__MM";
        public static string moveDocumentBaseType = "MMM";
        public static string requestDocumentBaseType = "MTR";
        public static string moveOrderDocumentBaseType = "MMO";
        public static string merchandiseInDocumentBaseType = "MMR";
        public static string merchandiseOutDocumentBaseType = "MMS";
        public static string merchandiseMakeDocumentBaseType = "MMP";
        public static string merchandiseMakeUpChangeDocumentBaseType = "MPR";
        public static string allWarehouseRepresentativeKey = "0";
        public static string allOrganisationRepresentativeKey = "0";
        public static string allStationRepresentativeKey = "0";

        public static bool allowNegativeStock = false;
        public static bool automateComponentDispatch = false;

        public static DataTable searchResult = new DataTable();
        public static DataTable searchCritrion = new DataTable();
        public static DataTable incomingInventorySourceInvoice = new DataTable();
        public static DataTable OutgoingInventorySourceInvoice = new DataTable();
        public static string logicConnector = "";
        public static bool isRequest = false;

        public static bool securityKeyValidityPassed = false;
        public static string Productname = "";

        public static string manualDocumentNumber = "";
        public static DateTime manualDocumentDate = DateTime.Now;
        public static bool documentInfoChanged = false;

        public static int openTransferCount = 0;

        public static codeRequested codeR;
        
        public static bool LDAPConnectionSet = false;
        public static bool useLDAPAuthentication = false;

        public static bool userCanEditSettings = false;

    }

    class userAccessPrevilageInformation
    {
        public static bool userStationprevilageIsReadOnly = true;
        public static bool userOrganisationprevilageIsReadOnly = true;

        public static bool canViewRequest = false;
        public static bool canCreateNewRequest = false;
        public static bool canConfirmRequest = false;
        public static bool canApproveRequest = false;
        public static bool canRejectRequest = false;

        public static bool canViewOrder = false;
        public static bool canCreateNewOrder = false;
        public static bool canConfirmOrder = false;

        public static bool canViewDispatch = false;
        public static bool canCreateNewDispatch = false;
        public static bool canConfirmDispatch = false;
        public static bool canRefuseDispatch = false;

        public static bool canViewDelivery = false;
        public static bool canAcceptDelivery = false;
        public static bool canConfirmRecipt = false;
        public static bool canRejectDelivery = false;
        public static bool canDisputeDelivery = false;

        public static bool canViewDispute = false;
        public static bool canAcceptDispute = false;
        public static bool canRejectDispute = false;

        public static bool canViewInventoryIn = false;
        public static bool canCreateNewInventoryIn = false;
        public static bool canApproveInventoryIn = false;

        public static bool canViewInventoryOut = false;
        public static bool canCreateNewInventoryOut = false;
        public static bool canApproveInventoryOut = false;

        public static bool canViewInventoryMake = false;
        public static bool canCreateNewInventoryMake = false;
        public static bool canApproveInventoryMake = false;

        public static bool canViewProductMakeUPChange = false;
        public static bool canCreateNewProductMakeUPChange = false;
        public static bool canApproveProductMakeUPChange = false;
    }

    class transactionStatusInformation
    {
        // variables that hold status of inventory movement to be recorded on 
        //... single transaction activity.
        public static string newRequest = "Draft_Request";
        public static string confirmedRequest = "Requested";
        public static string rejectedRequest = "Rejected";
        public static string approvedRequest = "Dispatch_Ordered";
        public static string satisfiedRequest = "Pacified";
        public static string closedRequest = "Closed";
        

        public static string newOrder = "Draft_Order";
        public static string approvedOrder = "Dispatch_Ordered";
        public static string satisfiedOrder = "Pacified";
        public static string closedOrder = "Closed";

        public static string newDispatch = "Draft_Dispatch";
        public static string confirmedDispatch = "Intransit";

        public static string deliveryReceived = "Delivered";
        public static string deliveryAccepted = "Received";
        public static string deliveryDisputed = "Disputed";

        public static string disputeAccepted = "Cancelled";
        public static string disputeRejected = "Re_Dispatched";
    }

    class dbCommitFailure
    {
        public static bool dbCommitError = false;
        public static bool dbCommitWarnning = false;

        public static string dbCommitErrorMessage = "";
        public static string dbCommitWarnningMessage = "";

    }

}
