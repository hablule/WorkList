//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9174
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace POSDocumentPrinter {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dtsPOSDocumentData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dtsPOSDocumentData : global::System.Data.DataSet {
        
        private dtAttachmentSummaryDataTable tabledtAttachmentSummary;
        
        private dtSalesDetailDataTable tabledtSalesDetail;
        
        private dtDispatchDetailDataTable tabledtDispatchDetail;
        
        private dtDispatchSummaryDataTable tabledtDispatchSummary;
        
        private dtSaleDepartmentInfoDataTable tabledtSaleDepartmentInfo;
        
        private dtRefundSummaryDataTable tabledtRefundSummary;
        
        private dtPaymentSummaryDataTable tabledtPaymentSummary;
        
        private dtPaymentDetailDataTable tabledtPaymentDetail;
        
        private dtCashDepositDataTable tabledtCashDeposit;
        
        private dtCashDepositDtlSrcDataTable tabledtCashDepositDtlSrc;
        
        private dtCashDepositDetailDataTable tabledtCashDepositDetail;
        
        private dtRefundDetailDataTable tabledtRefundDetail;
        
        private dtOpenInvoiceDataTable tabledtOpenInvoice;
        
        private dtUserInfoDataTable tabledtUserInfo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtsPOSDocumentData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dtsPOSDocumentData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtAttachmentSummary"] != null)) {
                    base.Tables.Add(new dtAttachmentSummaryDataTable(ds.Tables["dtAttachmentSummary"]));
                }
                if ((ds.Tables["dtSalesDetail"] != null)) {
                    base.Tables.Add(new dtSalesDetailDataTable(ds.Tables["dtSalesDetail"]));
                }
                if ((ds.Tables["dtDispatchDetail"] != null)) {
                    base.Tables.Add(new dtDispatchDetailDataTable(ds.Tables["dtDispatchDetail"]));
                }
                if ((ds.Tables["dtDispatchSummary"] != null)) {
                    base.Tables.Add(new dtDispatchSummaryDataTable(ds.Tables["dtDispatchSummary"]));
                }
                if ((ds.Tables["dtSaleDepartmentInfo"] != null)) {
                    base.Tables.Add(new dtSaleDepartmentInfoDataTable(ds.Tables["dtSaleDepartmentInfo"]));
                }
                if ((ds.Tables["dtRefundSummary"] != null)) {
                    base.Tables.Add(new dtRefundSummaryDataTable(ds.Tables["dtRefundSummary"]));
                }
                if ((ds.Tables["dtPaymentSummary"] != null)) {
                    base.Tables.Add(new dtPaymentSummaryDataTable(ds.Tables["dtPaymentSummary"]));
                }
                if ((ds.Tables["dtPaymentDetail"] != null)) {
                    base.Tables.Add(new dtPaymentDetailDataTable(ds.Tables["dtPaymentDetail"]));
                }
                if ((ds.Tables["dtCashDeposit"] != null)) {
                    base.Tables.Add(new dtCashDepositDataTable(ds.Tables["dtCashDeposit"]));
                }
                if ((ds.Tables["dtCashDepositDtlSrc"] != null)) {
                    base.Tables.Add(new dtCashDepositDtlSrcDataTable(ds.Tables["dtCashDepositDtlSrc"]));
                }
                if ((ds.Tables["dtCashDepositDetail"] != null)) {
                    base.Tables.Add(new dtCashDepositDetailDataTable(ds.Tables["dtCashDepositDetail"]));
                }
                if ((ds.Tables["dtRefundDetail"] != null)) {
                    base.Tables.Add(new dtRefundDetailDataTable(ds.Tables["dtRefundDetail"]));
                }
                if ((ds.Tables["dtOpenInvoice"] != null)) {
                    base.Tables.Add(new dtOpenInvoiceDataTable(ds.Tables["dtOpenInvoice"]));
                }
                if ((ds.Tables["dtUserInfo"] != null)) {
                    base.Tables.Add(new dtUserInfoDataTable(ds.Tables["dtUserInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtAttachmentSummaryDataTable dtAttachmentSummary {
            get {
                return this.tabledtAttachmentSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtSalesDetailDataTable dtSalesDetail {
            get {
                return this.tabledtSalesDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtDispatchDetailDataTable dtDispatchDetail {
            get {
                return this.tabledtDispatchDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtDispatchSummaryDataTable dtDispatchSummary {
            get {
                return this.tabledtDispatchSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtSaleDepartmentInfoDataTable dtSaleDepartmentInfo {
            get {
                return this.tabledtSaleDepartmentInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtRefundSummaryDataTable dtRefundSummary {
            get {
                return this.tabledtRefundSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtPaymentSummaryDataTable dtPaymentSummary {
            get {
                return this.tabledtPaymentSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtPaymentDetailDataTable dtPaymentDetail {
            get {
                return this.tabledtPaymentDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCashDepositDataTable dtCashDeposit {
            get {
                return this.tabledtCashDeposit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCashDepositDtlSrcDataTable dtCashDepositDtlSrc {
            get {
                return this.tabledtCashDepositDtlSrc;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCashDepositDetailDataTable dtCashDepositDetail {
            get {
                return this.tabledtCashDepositDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtRefundDetailDataTable dtRefundDetail {
            get {
                return this.tabledtRefundDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtOpenInvoiceDataTable dtOpenInvoice {
            get {
                return this.tabledtOpenInvoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtUserInfoDataTable dtUserInfo {
            get {
                return this.tabledtUserInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dtsPOSDocumentData cln = ((dtsPOSDocumentData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtAttachmentSummary"] != null)) {
                    base.Tables.Add(new dtAttachmentSummaryDataTable(ds.Tables["dtAttachmentSummary"]));
                }
                if ((ds.Tables["dtSalesDetail"] != null)) {
                    base.Tables.Add(new dtSalesDetailDataTable(ds.Tables["dtSalesDetail"]));
                }
                if ((ds.Tables["dtDispatchDetail"] != null)) {
                    base.Tables.Add(new dtDispatchDetailDataTable(ds.Tables["dtDispatchDetail"]));
                }
                if ((ds.Tables["dtDispatchSummary"] != null)) {
                    base.Tables.Add(new dtDispatchSummaryDataTable(ds.Tables["dtDispatchSummary"]));
                }
                if ((ds.Tables["dtSaleDepartmentInfo"] != null)) {
                    base.Tables.Add(new dtSaleDepartmentInfoDataTable(ds.Tables["dtSaleDepartmentInfo"]));
                }
                if ((ds.Tables["dtRefundSummary"] != null)) {
                    base.Tables.Add(new dtRefundSummaryDataTable(ds.Tables["dtRefundSummary"]));
                }
                if ((ds.Tables["dtPaymentSummary"] != null)) {
                    base.Tables.Add(new dtPaymentSummaryDataTable(ds.Tables["dtPaymentSummary"]));
                }
                if ((ds.Tables["dtPaymentDetail"] != null)) {
                    base.Tables.Add(new dtPaymentDetailDataTable(ds.Tables["dtPaymentDetail"]));
                }
                if ((ds.Tables["dtCashDeposit"] != null)) {
                    base.Tables.Add(new dtCashDepositDataTable(ds.Tables["dtCashDeposit"]));
                }
                if ((ds.Tables["dtCashDepositDtlSrc"] != null)) {
                    base.Tables.Add(new dtCashDepositDtlSrcDataTable(ds.Tables["dtCashDepositDtlSrc"]));
                }
                if ((ds.Tables["dtCashDepositDetail"] != null)) {
                    base.Tables.Add(new dtCashDepositDetailDataTable(ds.Tables["dtCashDepositDetail"]));
                }
                if ((ds.Tables["dtRefundDetail"] != null)) {
                    base.Tables.Add(new dtRefundDetailDataTable(ds.Tables["dtRefundDetail"]));
                }
                if ((ds.Tables["dtOpenInvoice"] != null)) {
                    base.Tables.Add(new dtOpenInvoiceDataTable(ds.Tables["dtOpenInvoice"]));
                }
                if ((ds.Tables["dtUserInfo"] != null)) {
                    base.Tables.Add(new dtUserInfoDataTable(ds.Tables["dtUserInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtAttachmentSummary = ((dtAttachmentSummaryDataTable)(base.Tables["dtAttachmentSummary"]));
            if ((initTable == true)) {
                if ((this.tabledtAttachmentSummary != null)) {
                    this.tabledtAttachmentSummary.InitVars();
                }
            }
            this.tabledtSalesDetail = ((dtSalesDetailDataTable)(base.Tables["dtSalesDetail"]));
            if ((initTable == true)) {
                if ((this.tabledtSalesDetail != null)) {
                    this.tabledtSalesDetail.InitVars();
                }
            }
            this.tabledtDispatchDetail = ((dtDispatchDetailDataTable)(base.Tables["dtDispatchDetail"]));
            if ((initTable == true)) {
                if ((this.tabledtDispatchDetail != null)) {
                    this.tabledtDispatchDetail.InitVars();
                }
            }
            this.tabledtDispatchSummary = ((dtDispatchSummaryDataTable)(base.Tables["dtDispatchSummary"]));
            if ((initTable == true)) {
                if ((this.tabledtDispatchSummary != null)) {
                    this.tabledtDispatchSummary.InitVars();
                }
            }
            this.tabledtSaleDepartmentInfo = ((dtSaleDepartmentInfoDataTable)(base.Tables["dtSaleDepartmentInfo"]));
            if ((initTable == true)) {
                if ((this.tabledtSaleDepartmentInfo != null)) {
                    this.tabledtSaleDepartmentInfo.InitVars();
                }
            }
            this.tabledtRefundSummary = ((dtRefundSummaryDataTable)(base.Tables["dtRefundSummary"]));
            if ((initTable == true)) {
                if ((this.tabledtRefundSummary != null)) {
                    this.tabledtRefundSummary.InitVars();
                }
            }
            this.tabledtPaymentSummary = ((dtPaymentSummaryDataTable)(base.Tables["dtPaymentSummary"]));
            if ((initTable == true)) {
                if ((this.tabledtPaymentSummary != null)) {
                    this.tabledtPaymentSummary.InitVars();
                }
            }
            this.tabledtPaymentDetail = ((dtPaymentDetailDataTable)(base.Tables["dtPaymentDetail"]));
            if ((initTable == true)) {
                if ((this.tabledtPaymentDetail != null)) {
                    this.tabledtPaymentDetail.InitVars();
                }
            }
            this.tabledtCashDeposit = ((dtCashDepositDataTable)(base.Tables["dtCashDeposit"]));
            if ((initTable == true)) {
                if ((this.tabledtCashDeposit != null)) {
                    this.tabledtCashDeposit.InitVars();
                }
            }
            this.tabledtCashDepositDtlSrc = ((dtCashDepositDtlSrcDataTable)(base.Tables["dtCashDepositDtlSrc"]));
            if ((initTable == true)) {
                if ((this.tabledtCashDepositDtlSrc != null)) {
                    this.tabledtCashDepositDtlSrc.InitVars();
                }
            }
            this.tabledtCashDepositDetail = ((dtCashDepositDetailDataTable)(base.Tables["dtCashDepositDetail"]));
            if ((initTable == true)) {
                if ((this.tabledtCashDepositDetail != null)) {
                    this.tabledtCashDepositDetail.InitVars();
                }
            }
            this.tabledtRefundDetail = ((dtRefundDetailDataTable)(base.Tables["dtRefundDetail"]));
            if ((initTable == true)) {
                if ((this.tabledtRefundDetail != null)) {
                    this.tabledtRefundDetail.InitVars();
                }
            }
            this.tabledtOpenInvoice = ((dtOpenInvoiceDataTable)(base.Tables["dtOpenInvoice"]));
            if ((initTable == true)) {
                if ((this.tabledtOpenInvoice != null)) {
                    this.tabledtOpenInvoice.InitVars();
                }
            }
            this.tabledtUserInfo = ((dtUserInfoDataTable)(base.Tables["dtUserInfo"]));
            if ((initTable == true)) {
                if ((this.tabledtUserInfo != null)) {
                    this.tabledtUserInfo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dtsPOSDocumentData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dtsPOSDocumentData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtAttachmentSummary = new dtAttachmentSummaryDataTable();
            base.Tables.Add(this.tabledtAttachmentSummary);
            this.tabledtSalesDetail = new dtSalesDetailDataTable();
            base.Tables.Add(this.tabledtSalesDetail);
            this.tabledtDispatchDetail = new dtDispatchDetailDataTable();
            base.Tables.Add(this.tabledtDispatchDetail);
            this.tabledtDispatchSummary = new dtDispatchSummaryDataTable();
            base.Tables.Add(this.tabledtDispatchSummary);
            this.tabledtSaleDepartmentInfo = new dtSaleDepartmentInfoDataTable();
            base.Tables.Add(this.tabledtSaleDepartmentInfo);
            this.tabledtRefundSummary = new dtRefundSummaryDataTable();
            base.Tables.Add(this.tabledtRefundSummary);
            this.tabledtPaymentSummary = new dtPaymentSummaryDataTable();
            base.Tables.Add(this.tabledtPaymentSummary);
            this.tabledtPaymentDetail = new dtPaymentDetailDataTable();
            base.Tables.Add(this.tabledtPaymentDetail);
            this.tabledtCashDeposit = new dtCashDepositDataTable();
            base.Tables.Add(this.tabledtCashDeposit);
            this.tabledtCashDepositDtlSrc = new dtCashDepositDtlSrcDataTable();
            base.Tables.Add(this.tabledtCashDepositDtlSrc);
            this.tabledtCashDepositDetail = new dtCashDepositDetailDataTable();
            base.Tables.Add(this.tabledtCashDepositDetail);
            this.tabledtRefundDetail = new dtRefundDetailDataTable();
            base.Tables.Add(this.tabledtRefundDetail);
            this.tabledtOpenInvoice = new dtOpenInvoiceDataTable();
            base.Tables.Add(this.tabledtOpenInvoice);
            this.tabledtUserInfo = new dtUserInfoDataTable();
            base.Tables.Add(this.tabledtUserInfo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtAttachmentSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtSalesDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtDispatchDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtDispatchSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtSaleDepartmentInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtRefundSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtPaymentSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtPaymentDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtCashDeposit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtCashDepositDtlSrc() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtCashDepositDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtRefundDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtOpenInvoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtUserInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dtsPOSDocumentData ds = new dtsPOSDocumentData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtAttachmentSummaryRowChangeEventHandler(object sender, dtAttachmentSummaryRowChangeEvent e);
        
        public delegate void dtSalesDetailRowChangeEventHandler(object sender, dtSalesDetailRowChangeEvent e);
        
        public delegate void dtDispatchDetailRowChangeEventHandler(object sender, dtDispatchDetailRowChangeEvent e);
        
        public delegate void dtDispatchSummaryRowChangeEventHandler(object sender, dtDispatchSummaryRowChangeEvent e);
        
        public delegate void dtSaleDepartmentInfoRowChangeEventHandler(object sender, dtSaleDepartmentInfoRowChangeEvent e);
        
        public delegate void dtRefundSummaryRowChangeEventHandler(object sender, dtRefundSummaryRowChangeEvent e);
        
        public delegate void dtPaymentSummaryRowChangeEventHandler(object sender, dtPaymentSummaryRowChangeEvent e);
        
        public delegate void dtPaymentDetailRowChangeEventHandler(object sender, dtPaymentDetailRowChangeEvent e);
        
        public delegate void dtCashDepositRowChangeEventHandler(object sender, dtCashDepositRowChangeEvent e);
        
        public delegate void dtCashDepositDtlSrcRowChangeEventHandler(object sender, dtCashDepositDtlSrcRowChangeEvent e);
        
        public delegate void dtCashDepositDetailRowChangeEventHandler(object sender, dtCashDepositDetailRowChangeEvent e);
        
        public delegate void dtRefundDetailRowChangeEventHandler(object sender, dtRefundDetailRowChangeEvent e);
        
        public delegate void dtOpenInvoiceRowChangeEventHandler(object sender, dtOpenInvoiceRowChangeEvent e);
        
        public delegate void dtUserInfoRowChangeEventHandler(object sender, dtUserInfoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtAttachmentSummaryDataTable : global::System.Data.TypedTableBase<dtAttachmentSummaryRow> {
            
            private global::System.Data.DataColumn columnsalesID;
            
            private global::System.Data.DataColumn columnstationID;
            
            private global::System.Data.DataColumn columnnodeID;
            
            private global::System.Data.DataColumn columnDocumentName;
            
            private global::System.Data.DataColumn columnSalesPerson;
            
            private global::System.Data.DataColumn columnDepartmentStore;
            
            private global::System.Data.DataColumn columnDeliveryOrderNumber;
            
            private global::System.Data.DataColumn columnFSNumber;
            
            private global::System.Data.DataColumn columnReferenceNumber;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnTime;
            
            private global::System.Data.DataColumn columnBuyersTradeName;
            
            private global::System.Data.DataColumn columnBuyersTIN;
            
            private global::System.Data.DataColumn columnBuyersVAT;
            
            private global::System.Data.DataColumn columnBuyersZoneORSubCity;
            
            private global::System.Data.DataColumn columnBuyersKebele;
            
            private global::System.Data.DataColumn columnBuyersHouseNumber;
            
            private global::System.Data.DataColumn columnBuyersPhoneNumber;
            
            private global::System.Data.DataColumn columnSalesTotal;
            
            private global::System.Data.DataColumn columnSalesVAT;
            
            private global::System.Data.DataColumn columnSalesGrandTotal;
            
            private global::System.Data.DataColumn columnSalesWithHolding;
            
            private global::System.Data.DataColumn columnSalesNetPay;
            
            private global::System.Data.DataColumn columnSalesAmountInWord;
            
            private global::System.Data.DataColumn columnSalesPaymentMethod;
            
            private global::System.Data.DataColumn columnMRC;
            
            private global::System.Data.DataColumn columnNote;
            
            private global::System.Data.DataColumn columnnumberOfRePrint;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAttachmentSummaryDataTable() {
                this.TableName = "dtAttachmentSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtAttachmentSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtAttachmentSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesIDColumn {
                get {
                    return this.columnsalesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stationIDColumn {
                get {
                    return this.columnstationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nodeIDColumn {
                get {
                    return this.columnnodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentNameColumn {
                get {
                    return this.columnDocumentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesPersonColumn {
                get {
                    return this.columnSalesPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartmentStoreColumn {
                get {
                    return this.columnDepartmentStore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryOrderNumberColumn {
                get {
                    return this.columnDeliveryOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FSNumberColumn {
                get {
                    return this.columnFSNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceNumberColumn {
                get {
                    return this.columnReferenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeColumn {
                get {
                    return this.columnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuyersTradeNameColumn {
                get {
                    return this.columnBuyersTradeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuyersTINColumn {
                get {
                    return this.columnBuyersTIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuyersVATColumn {
                get {
                    return this.columnBuyersVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuyersZoneORSubCityColumn {
                get {
                    return this.columnBuyersZoneORSubCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuyersKebeleColumn {
                get {
                    return this.columnBuyersKebele;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuyersHouseNumberColumn {
                get {
                    return this.columnBuyersHouseNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuyersPhoneNumberColumn {
                get {
                    return this.columnBuyersPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTotalColumn {
                get {
                    return this.columnSalesTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesVATColumn {
                get {
                    return this.columnSalesVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesGrandTotalColumn {
                get {
                    return this.columnSalesGrandTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesWithHoldingColumn {
                get {
                    return this.columnSalesWithHolding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesNetPayColumn {
                get {
                    return this.columnSalesNetPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesAmountInWordColumn {
                get {
                    return this.columnSalesAmountInWord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesPaymentMethodColumn {
                get {
                    return this.columnSalesPaymentMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MRCColumn {
                get {
                    return this.columnMRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberOfRePrintColumn {
                get {
                    return this.columnnumberOfRePrint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAttachmentSummaryRow this[int index] {
                get {
                    return ((dtAttachmentSummaryRow)(this.Rows[index]));
                }
            }
            
            public event dtAttachmentSummaryRowChangeEventHandler dtAttachmentSummaryRowChanging;
            
            public event dtAttachmentSummaryRowChangeEventHandler dtAttachmentSummaryRowChanged;
            
            public event dtAttachmentSummaryRowChangeEventHandler dtAttachmentSummaryRowDeleting;
            
            public event dtAttachmentSummaryRowChangeEventHandler dtAttachmentSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtAttachmentSummaryRow(dtAttachmentSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAttachmentSummaryRow AdddtAttachmentSummaryRow(
                        string salesID, 
                        string stationID, 
                        string nodeID, 
                        string DocumentName, 
                        string SalesPerson, 
                        string DepartmentStore, 
                        string DeliveryOrderNumber, 
                        string FSNumber, 
                        string ReferenceNumber, 
                        System.DateTime Date, 
                        System.DateTime Time, 
                        string BuyersTradeName, 
                        string BuyersTIN, 
                        string BuyersVAT, 
                        string BuyersZoneORSubCity, 
                        string BuyersKebele, 
                        string BuyersHouseNumber, 
                        string BuyersPhoneNumber, 
                        decimal SalesTotal, 
                        decimal SalesVAT, 
                        decimal SalesGrandTotal, 
                        decimal SalesWithHolding, 
                        decimal SalesNetPay, 
                        string SalesAmountInWord, 
                        string SalesPaymentMethod, 
                        string MRC, 
                        string Note, 
                        string numberOfRePrint) {
                dtAttachmentSummaryRow rowdtAttachmentSummaryRow = ((dtAttachmentSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        salesID,
                        stationID,
                        nodeID,
                        DocumentName,
                        SalesPerson,
                        DepartmentStore,
                        DeliveryOrderNumber,
                        FSNumber,
                        ReferenceNumber,
                        Date,
                        Time,
                        BuyersTradeName,
                        BuyersTIN,
                        BuyersVAT,
                        BuyersZoneORSubCity,
                        BuyersKebele,
                        BuyersHouseNumber,
                        BuyersPhoneNumber,
                        SalesTotal,
                        SalesVAT,
                        SalesGrandTotal,
                        SalesWithHolding,
                        SalesNetPay,
                        SalesAmountInWord,
                        SalesPaymentMethod,
                        MRC,
                        Note,
                        numberOfRePrint};
                rowdtAttachmentSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtAttachmentSummaryRow);
                return rowdtAttachmentSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAttachmentSummaryRow FindBysalesIDstationID(string salesID, string stationID) {
                return ((dtAttachmentSummaryRow)(this.Rows.Find(new object[] {
                            salesID,
                            stationID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtAttachmentSummaryDataTable cln = ((dtAttachmentSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtAttachmentSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsalesID = base.Columns["salesID"];
                this.columnstationID = base.Columns["stationID"];
                this.columnnodeID = base.Columns["nodeID"];
                this.columnDocumentName = base.Columns["DocumentName"];
                this.columnSalesPerson = base.Columns["SalesPerson"];
                this.columnDepartmentStore = base.Columns["DepartmentStore"];
                this.columnDeliveryOrderNumber = base.Columns["DeliveryOrderNumber"];
                this.columnFSNumber = base.Columns["FSNumber"];
                this.columnReferenceNumber = base.Columns["ReferenceNumber"];
                this.columnDate = base.Columns["Date"];
                this.columnTime = base.Columns["Time"];
                this.columnBuyersTradeName = base.Columns["BuyersTradeName"];
                this.columnBuyersTIN = base.Columns["BuyersTIN"];
                this.columnBuyersVAT = base.Columns["BuyersVAT"];
                this.columnBuyersZoneORSubCity = base.Columns["BuyersZoneORSubCity"];
                this.columnBuyersKebele = base.Columns["BuyersKebele"];
                this.columnBuyersHouseNumber = base.Columns["BuyersHouseNumber"];
                this.columnBuyersPhoneNumber = base.Columns["BuyersPhoneNumber"];
                this.columnSalesTotal = base.Columns["SalesTotal"];
                this.columnSalesVAT = base.Columns["SalesVAT"];
                this.columnSalesGrandTotal = base.Columns["SalesGrandTotal"];
                this.columnSalesWithHolding = base.Columns["SalesWithHolding"];
                this.columnSalesNetPay = base.Columns["SalesNetPay"];
                this.columnSalesAmountInWord = base.Columns["SalesAmountInWord"];
                this.columnSalesPaymentMethod = base.Columns["SalesPaymentMethod"];
                this.columnMRC = base.Columns["MRC"];
                this.columnNote = base.Columns["Note"];
                this.columnnumberOfRePrint = base.Columns["numberOfRePrint"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsalesID = new global::System.Data.DataColumn("salesID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalesID);
                this.columnstationID = new global::System.Data.DataColumn("stationID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstationID);
                this.columnnodeID = new global::System.Data.DataColumn("nodeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnodeID);
                this.columnDocumentName = new global::System.Data.DataColumn("DocumentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentName);
                this.columnSalesPerson = new global::System.Data.DataColumn("SalesPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPerson);
                this.columnDepartmentStore = new global::System.Data.DataColumn("DepartmentStore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartmentStore);
                this.columnDeliveryOrderNumber = new global::System.Data.DataColumn("DeliveryOrderNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryOrderNumber);
                this.columnFSNumber = new global::System.Data.DataColumn("FSNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSNumber);
                this.columnReferenceNumber = new global::System.Data.DataColumn("ReferenceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceNumber);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnTime = new global::System.Data.DataColumn("Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime);
                this.columnBuyersTradeName = new global::System.Data.DataColumn("BuyersTradeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyersTradeName);
                this.columnBuyersTIN = new global::System.Data.DataColumn("BuyersTIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyersTIN);
                this.columnBuyersVAT = new global::System.Data.DataColumn("BuyersVAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyersVAT);
                this.columnBuyersZoneORSubCity = new global::System.Data.DataColumn("BuyersZoneORSubCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyersZoneORSubCity);
                this.columnBuyersKebele = new global::System.Data.DataColumn("BuyersKebele", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyersKebele);
                this.columnBuyersHouseNumber = new global::System.Data.DataColumn("BuyersHouseNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyersHouseNumber);
                this.columnBuyersPhoneNumber = new global::System.Data.DataColumn("BuyersPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyersPhoneNumber);
                this.columnSalesTotal = new global::System.Data.DataColumn("SalesTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTotal);
                this.columnSalesVAT = new global::System.Data.DataColumn("SalesVAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesVAT);
                this.columnSalesGrandTotal = new global::System.Data.DataColumn("SalesGrandTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesGrandTotal);
                this.columnSalesWithHolding = new global::System.Data.DataColumn("SalesWithHolding", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesWithHolding);
                this.columnSalesNetPay = new global::System.Data.DataColumn("SalesNetPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesNetPay);
                this.columnSalesAmountInWord = new global::System.Data.DataColumn("SalesAmountInWord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesAmountInWord);
                this.columnSalesPaymentMethod = new global::System.Data.DataColumn("SalesPaymentMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPaymentMethod);
                this.columnMRC = new global::System.Data.DataColumn("MRC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMRC);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnnumberOfRePrint = new global::System.Data.DataColumn("numberOfRePrint", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberOfRePrint);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("pkdtAtt", new global::System.Data.DataColumn[] {
                                this.columnsalesID,
                                this.columnstationID}, true));
                this.columnsalesID.AllowDBNull = false;
                this.columnstationID.AllowDBNull = false;
                this.columnSalesPerson.Caption = "Sales Person";
                this.columnDepartmentStore.Caption = "Dept. Store.";
                this.columnDeliveryOrderNumber.Caption = "Delivery Order No.";
                this.columnFSNumber.Caption = "FS No.";
                this.columnReferenceNumber.AllowDBNull = false;
                this.columnReferenceNumber.Caption = "Ref. No.";
                this.columnBuyersTradeName.Caption = "Buyer\'s/TradeName";
                this.columnBuyersTIN.Caption = "Buyer\'s TIN";
                this.columnBuyersVAT.Caption = "Buyer\'s VAT";
                this.columnBuyersZoneORSubCity.Caption = "Zone/S.City";
                this.columnBuyersKebele.Caption = "Kebele";
                this.columnBuyersHouseNumber.Caption = "House No.";
                this.columnBuyersPhoneNumber.Caption = "Phone No.";
                this.columnSalesTotal.Caption = "Sub Total";
                this.columnSalesVAT.Caption = "VAT (15%)";
                this.columnSalesGrandTotal.Caption = "Grand Total";
                this.columnSalesWithHolding.Caption = "Withholding Tax (2%)";
                this.columnSalesNetPay.Caption = "Net Paid";
                this.columnSalesAmountInWord.Caption = "Birr";
                this.columnSalesPaymentMethod.Caption = "Payed By";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAttachmentSummaryRow NewdtAttachmentSummaryRow() {
                return ((dtAttachmentSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtAttachmentSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtAttachmentSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtAttachmentSummaryRowChanged != null)) {
                    this.dtAttachmentSummaryRowChanged(this, new dtAttachmentSummaryRowChangeEvent(((dtAttachmentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtAttachmentSummaryRowChanging != null)) {
                    this.dtAttachmentSummaryRowChanging(this, new dtAttachmentSummaryRowChangeEvent(((dtAttachmentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtAttachmentSummaryRowDeleted != null)) {
                    this.dtAttachmentSummaryRowDeleted(this, new dtAttachmentSummaryRowChangeEvent(((dtAttachmentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtAttachmentSummaryRowDeleting != null)) {
                    this.dtAttachmentSummaryRowDeleting(this, new dtAttachmentSummaryRowChangeEvent(((dtAttachmentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtAttachmentSummaryRow(dtAttachmentSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtAttachmentSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtSalesDetailDataTable : global::System.Data.TypedTableBase<dtSalesDetailRow> {
            
            private global::System.Data.DataColumn columnsalesDetailId;
            
            private global::System.Data.DataColumn columnsalesDetailStation;
            
            private global::System.Data.DataColumn columnsalesDetailNode;
            
            private global::System.Data.DataColumn columnsalesID;
            
            private global::System.Data.DataColumn columnitem_id;
            
            private global::System.Data.DataColumn columnlocatorFromId;
            
            private global::System.Data.DataColumn _columnSn_;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnComment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalesDetailDataTable() {
                this.TableName = "dtSalesDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSalesDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtSalesDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesDetailIdColumn {
                get {
                    return this.columnsalesDetailId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesDetailStationColumn {
                get {
                    return this.columnsalesDetailStation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesDetailNodeColumn {
                get {
                    return this.columnsalesDetailNode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesIDColumn {
                get {
                    return this.columnsalesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn item_idColumn {
                get {
                    return this.columnitem_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn locatorFromIdColumn {
                get {
                    return this.columnlocatorFromId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _Sn_Column {
                get {
                    return this._columnSn_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalesDetailRow this[int index] {
                get {
                    return ((dtSalesDetailRow)(this.Rows[index]));
                }
            }
            
            public event dtSalesDetailRowChangeEventHandler dtSalesDetailRowChanging;
            
            public event dtSalesDetailRowChangeEventHandler dtSalesDetailRowChanged;
            
            public event dtSalesDetailRowChangeEventHandler dtSalesDetailRowDeleting;
            
            public event dtSalesDetailRowChangeEventHandler dtSalesDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtSalesDetailRow(dtSalesDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalesDetailRow AdddtSalesDetailRow(string salesDetailId, string salesDetailStation, string salesDetailNode, string salesID, string item_id, string locatorFromId, string _Sn_, string Description, string Quantity, string UOM, decimal UnitPrice, decimal TotalAmount, string Comment) {
                dtSalesDetailRow rowdtSalesDetailRow = ((dtSalesDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        salesDetailId,
                        salesDetailStation,
                        salesDetailNode,
                        salesID,
                        item_id,
                        locatorFromId,
                        _Sn_,
                        Description,
                        Quantity,
                        UOM,
                        UnitPrice,
                        TotalAmount,
                        Comment};
                rowdtSalesDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtSalesDetailRow);
                return rowdtSalesDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtSalesDetailDataTable cln = ((dtSalesDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtSalesDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsalesDetailId = base.Columns["salesDetailId"];
                this.columnsalesDetailStation = base.Columns["salesDetailStation"];
                this.columnsalesDetailNode = base.Columns["salesDetailNode"];
                this.columnsalesID = base.Columns["salesID"];
                this.columnitem_id = base.Columns["item_id"];
                this.columnlocatorFromId = base.Columns["locatorFromId"];
                this._columnSn_ = base.Columns["Sn."];
                this.columnDescription = base.Columns["Description"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUOM = base.Columns["UOM"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnComment = base.Columns["Comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsalesDetailId = new global::System.Data.DataColumn("salesDetailId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalesDetailId);
                this.columnsalesDetailStation = new global::System.Data.DataColumn("salesDetailStation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalesDetailStation);
                this.columnsalesDetailNode = new global::System.Data.DataColumn("salesDetailNode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalesDetailNode);
                this.columnsalesID = new global::System.Data.DataColumn("salesID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalesID);
                this.columnitem_id = new global::System.Data.DataColumn("item_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem_id);
                this.columnlocatorFromId = new global::System.Data.DataColumn("locatorFromId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocatorFromId);
                this._columnSn_ = new global::System.Data.DataColumn("Sn.", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnSn_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSn_");
                this._columnSn_.ExtendedProperties.Add("Generator_UserColumnName", "Sn.");
                base.Columns.Add(this._columnSn_);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalesDetailRow NewdtSalesDetailRow() {
                return ((dtSalesDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtSalesDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtSalesDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtSalesDetailRowChanged != null)) {
                    this.dtSalesDetailRowChanged(this, new dtSalesDetailRowChangeEvent(((dtSalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtSalesDetailRowChanging != null)) {
                    this.dtSalesDetailRowChanging(this, new dtSalesDetailRowChangeEvent(((dtSalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtSalesDetailRowDeleted != null)) {
                    this.dtSalesDetailRowDeleted(this, new dtSalesDetailRowChangeEvent(((dtSalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtSalesDetailRowDeleting != null)) {
                    this.dtSalesDetailRowDeleting(this, new dtSalesDetailRowChangeEvent(((dtSalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtSalesDetailRow(dtSalesDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtSalesDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtDispatchDetailDataTable : global::System.Data.TypedTableBase<dtDispatchDetailRow> {
            
            private global::System.Data.DataColumn columnsalesDetailId;
            
            private global::System.Data.DataColumn columnsalesDetailStation;
            
            private global::System.Data.DataColumn columnsalesDetailNode;
            
            private global::System.Data.DataColumn columnsalesID;
            
            private global::System.Data.DataColumn columnitem_id;
            
            private global::System.Data.DataColumn columnlocatorFromId;
            
            private global::System.Data.DataColumn _columnSn_;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchDetailDataTable() {
                this.TableName = "dtDispatchDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtDispatchDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtDispatchDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesDetailIdColumn {
                get {
                    return this.columnsalesDetailId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesDetailStationColumn {
                get {
                    return this.columnsalesDetailStation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesDetailNodeColumn {
                get {
                    return this.columnsalesDetailNode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesIDColumn {
                get {
                    return this.columnsalesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn item_idColumn {
                get {
                    return this.columnitem_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn locatorFromIdColumn {
                get {
                    return this.columnlocatorFromId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _Sn_Column {
                get {
                    return this._columnSn_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchDetailRow this[int index] {
                get {
                    return ((dtDispatchDetailRow)(this.Rows[index]));
                }
            }
            
            public event dtDispatchDetailRowChangeEventHandler dtDispatchDetailRowChanging;
            
            public event dtDispatchDetailRowChangeEventHandler dtDispatchDetailRowChanged;
            
            public event dtDispatchDetailRowChangeEventHandler dtDispatchDetailRowDeleting;
            
            public event dtDispatchDetailRowChangeEventHandler dtDispatchDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtDispatchDetailRow(dtDispatchDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchDetailRow AdddtDispatchDetailRow(string salesDetailId, string salesDetailStation, string salesDetailNode, string salesID, string item_id, string locatorFromId, string _Sn_, string Description, string Quantity, string UOM, string Comment, string Remark) {
                dtDispatchDetailRow rowdtDispatchDetailRow = ((dtDispatchDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        salesDetailId,
                        salesDetailStation,
                        salesDetailNode,
                        salesID,
                        item_id,
                        locatorFromId,
                        _Sn_,
                        Description,
                        Quantity,
                        UOM,
                        Comment,
                        Remark};
                rowdtDispatchDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtDispatchDetailRow);
                return rowdtDispatchDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtDispatchDetailDataTable cln = ((dtDispatchDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtDispatchDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsalesDetailId = base.Columns["salesDetailId"];
                this.columnsalesDetailStation = base.Columns["salesDetailStation"];
                this.columnsalesDetailNode = base.Columns["salesDetailNode"];
                this.columnsalesID = base.Columns["salesID"];
                this.columnitem_id = base.Columns["item_id"];
                this.columnlocatorFromId = base.Columns["locatorFromId"];
                this._columnSn_ = base.Columns["Sn."];
                this.columnDescription = base.Columns["Description"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUOM = base.Columns["UOM"];
                this.columnComment = base.Columns["Comment"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsalesDetailId = new global::System.Data.DataColumn("salesDetailId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalesDetailId);
                this.columnsalesDetailStation = new global::System.Data.DataColumn("salesDetailStation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalesDetailStation);
                this.columnsalesDetailNode = new global::System.Data.DataColumn("salesDetailNode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalesDetailNode);
                this.columnsalesID = new global::System.Data.DataColumn("salesID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalesID);
                this.columnitem_id = new global::System.Data.DataColumn("item_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem_id);
                this.columnlocatorFromId = new global::System.Data.DataColumn("locatorFromId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocatorFromId);
                this._columnSn_ = new global::System.Data.DataColumn("Sn.", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnSn_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSn_");
                this._columnSn_.ExtendedProperties.Add("Generator_UserColumnName", "Sn.");
                base.Columns.Add(this._columnSn_);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchDetailRow NewdtDispatchDetailRow() {
                return ((dtDispatchDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtDispatchDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtDispatchDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtDispatchDetailRowChanged != null)) {
                    this.dtDispatchDetailRowChanged(this, new dtDispatchDetailRowChangeEvent(((dtDispatchDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtDispatchDetailRowChanging != null)) {
                    this.dtDispatchDetailRowChanging(this, new dtDispatchDetailRowChangeEvent(((dtDispatchDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtDispatchDetailRowDeleted != null)) {
                    this.dtDispatchDetailRowDeleted(this, new dtDispatchDetailRowChangeEvent(((dtDispatchDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtDispatchDetailRowDeleting != null)) {
                    this.dtDispatchDetailRowDeleting(this, new dtDispatchDetailRowChangeEvent(((dtDispatchDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtDispatchDetailRow(dtDispatchDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtDispatchDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtDispatchSummaryDataTable : global::System.Data.TypedTableBase<dtDispatchSummaryRow> {
            
            private global::System.Data.DataColumn columnDocumentName;
            
            private global::System.Data.DataColumn columnDeliveryOrderNumber;
            
            private global::System.Data.DataColumn columnDispatchFrom;
            
            private global::System.Data.DataColumn columnnumberOfRePrint;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchSummaryDataTable() {
                this.TableName = "dtDispatchSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtDispatchSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtDispatchSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentNameColumn {
                get {
                    return this.columnDocumentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryOrderNumberColumn {
                get {
                    return this.columnDeliveryOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DispatchFromColumn {
                get {
                    return this.columnDispatchFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberOfRePrintColumn {
                get {
                    return this.columnnumberOfRePrint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchSummaryRow this[int index] {
                get {
                    return ((dtDispatchSummaryRow)(this.Rows[index]));
                }
            }
            
            public event dtDispatchSummaryRowChangeEventHandler dtDispatchSummaryRowChanging;
            
            public event dtDispatchSummaryRowChangeEventHandler dtDispatchSummaryRowChanged;
            
            public event dtDispatchSummaryRowChangeEventHandler dtDispatchSummaryRowDeleting;
            
            public event dtDispatchSummaryRowChangeEventHandler dtDispatchSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtDispatchSummaryRow(dtDispatchSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchSummaryRow AdddtDispatchSummaryRow(string DocumentName, string DeliveryOrderNumber, string DispatchFrom, string numberOfRePrint) {
                dtDispatchSummaryRow rowdtDispatchSummaryRow = ((dtDispatchSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentName,
                        DeliveryOrderNumber,
                        DispatchFrom,
                        numberOfRePrint};
                rowdtDispatchSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtDispatchSummaryRow);
                return rowdtDispatchSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtDispatchSummaryDataTable cln = ((dtDispatchSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtDispatchSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentName = base.Columns["DocumentName"];
                this.columnDeliveryOrderNumber = base.Columns["DeliveryOrderNumber"];
                this.columnDispatchFrom = base.Columns["DispatchFrom"];
                this.columnnumberOfRePrint = base.Columns["numberOfRePrint"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentName = new global::System.Data.DataColumn("DocumentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentName);
                this.columnDeliveryOrderNumber = new global::System.Data.DataColumn("DeliveryOrderNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryOrderNumber);
                this.columnDispatchFrom = new global::System.Data.DataColumn("DispatchFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispatchFrom);
                this.columnnumberOfRePrint = new global::System.Data.DataColumn("numberOfRePrint", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberOfRePrint);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchSummaryRow NewdtDispatchSummaryRow() {
                return ((dtDispatchSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtDispatchSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtDispatchSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtDispatchSummaryRowChanged != null)) {
                    this.dtDispatchSummaryRowChanged(this, new dtDispatchSummaryRowChangeEvent(((dtDispatchSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtDispatchSummaryRowChanging != null)) {
                    this.dtDispatchSummaryRowChanging(this, new dtDispatchSummaryRowChangeEvent(((dtDispatchSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtDispatchSummaryRowDeleted != null)) {
                    this.dtDispatchSummaryRowDeleted(this, new dtDispatchSummaryRowChangeEvent(((dtDispatchSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtDispatchSummaryRowDeleting != null)) {
                    this.dtDispatchSummaryRowDeleting(this, new dtDispatchSummaryRowChangeEvent(((dtDispatchSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtDispatchSummaryRow(dtDispatchSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtDispatchSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtSaleDepartmentInfoDataTable : global::System.Data.TypedTableBase<dtSaleDepartmentInfoRow> {
            
            private global::System.Data.DataColumn columnSubCity;
            
            private global::System.Data.DataColumn columnkebele;
            
            private global::System.Data.DataColumn columnHouseNumber;
            
            private global::System.Data.DataColumn columnVATRegistrationNumber;
            
            private global::System.Data.DataColumn columnTINNumber;
            
            private global::System.Data.DataColumn columnDateRegistered;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaleDepartmentInfoDataTable() {
                this.TableName = "dtSaleDepartmentInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSaleDepartmentInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtSaleDepartmentInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubCityColumn {
                get {
                    return this.columnSubCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kebeleColumn {
                get {
                    return this.columnkebele;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HouseNumberColumn {
                get {
                    return this.columnHouseNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATRegistrationNumberColumn {
                get {
                    return this.columnVATRegistrationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TINNumberColumn {
                get {
                    return this.columnTINNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateRegisteredColumn {
                get {
                    return this.columnDateRegistered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaleDepartmentInfoRow this[int index] {
                get {
                    return ((dtSaleDepartmentInfoRow)(this.Rows[index]));
                }
            }
            
            public event dtSaleDepartmentInfoRowChangeEventHandler dtSaleDepartmentInfoRowChanging;
            
            public event dtSaleDepartmentInfoRowChangeEventHandler dtSaleDepartmentInfoRowChanged;
            
            public event dtSaleDepartmentInfoRowChangeEventHandler dtSaleDepartmentInfoRowDeleting;
            
            public event dtSaleDepartmentInfoRowChangeEventHandler dtSaleDepartmentInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtSaleDepartmentInfoRow(dtSaleDepartmentInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaleDepartmentInfoRow AdddtSaleDepartmentInfoRow(string SubCity, string kebele, string HouseNumber, string VATRegistrationNumber, string TINNumber, string DateRegistered) {
                dtSaleDepartmentInfoRow rowdtSaleDepartmentInfoRow = ((dtSaleDepartmentInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubCity,
                        kebele,
                        HouseNumber,
                        VATRegistrationNumber,
                        TINNumber,
                        DateRegistered};
                rowdtSaleDepartmentInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtSaleDepartmentInfoRow);
                return rowdtSaleDepartmentInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtSaleDepartmentInfoDataTable cln = ((dtSaleDepartmentInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtSaleDepartmentInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSubCity = base.Columns["SubCity"];
                this.columnkebele = base.Columns["kebele"];
                this.columnHouseNumber = base.Columns["HouseNumber"];
                this.columnVATRegistrationNumber = base.Columns["VATRegistrationNumber"];
                this.columnTINNumber = base.Columns["TINNumber"];
                this.columnDateRegistered = base.Columns["DateRegistered"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSubCity = new global::System.Data.DataColumn("SubCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCity);
                this.columnkebele = new global::System.Data.DataColumn("kebele", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkebele);
                this.columnHouseNumber = new global::System.Data.DataColumn("HouseNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouseNumber);
                this.columnVATRegistrationNumber = new global::System.Data.DataColumn("VATRegistrationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATRegistrationNumber);
                this.columnTINNumber = new global::System.Data.DataColumn("TINNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTINNumber);
                this.columnDateRegistered = new global::System.Data.DataColumn("DateRegistered", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateRegistered);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaleDepartmentInfoRow NewdtSaleDepartmentInfoRow() {
                return ((dtSaleDepartmentInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtSaleDepartmentInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtSaleDepartmentInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtSaleDepartmentInfoRowChanged != null)) {
                    this.dtSaleDepartmentInfoRowChanged(this, new dtSaleDepartmentInfoRowChangeEvent(((dtSaleDepartmentInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtSaleDepartmentInfoRowChanging != null)) {
                    this.dtSaleDepartmentInfoRowChanging(this, new dtSaleDepartmentInfoRowChangeEvent(((dtSaleDepartmentInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtSaleDepartmentInfoRowDeleted != null)) {
                    this.dtSaleDepartmentInfoRowDeleted(this, new dtSaleDepartmentInfoRowChangeEvent(((dtSaleDepartmentInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtSaleDepartmentInfoRowDeleting != null)) {
                    this.dtSaleDepartmentInfoRowDeleting(this, new dtSaleDepartmentInfoRowChangeEvent(((dtSaleDepartmentInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtSaleDepartmentInfoRow(dtSaleDepartmentInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtSaleDepartmentInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtRefundSummaryDataTable : global::System.Data.TypedTableBase<dtRefundSummaryRow> {
            
            private global::System.Data.DataColumn columnsalesId;
            
            private global::System.Data.DataColumn columnrefundId;
            
            private global::System.Data.DataColumn columnrefundStation;
            
            private global::System.Data.DataColumn columnrefundNode;
            
            private global::System.Data.DataColumn columnrefundNumber;
            
            private global::System.Data.DataColumn columnRFNumber;
            
            private global::System.Data.DataColumn columnrefundDateAndTime;
            
            private global::System.Data.DataColumn columnRefundTotal;
            
            private global::System.Data.DataColumn columnRefundVAT;
            
            private global::System.Data.DataColumn columnRefundGrandTotal;
            
            private global::System.Data.DataColumn columnRefundWithHolding;
            
            private global::System.Data.DataColumn columnRefundNetPay;
            
            private global::System.Data.DataColumn columnRefundAmountInWord;
            
            private global::System.Data.DataColumn columnrefundReason;
            
            private global::System.Data.DataColumn columnrefundBy;
            
            private global::System.Data.DataColumn columnnumberOfRePrint;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundSummaryDataTable() {
                this.TableName = "dtRefundSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtRefundSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtRefundSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesIdColumn {
                get {
                    return this.columnsalesId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refundIdColumn {
                get {
                    return this.columnrefundId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refundStationColumn {
                get {
                    return this.columnrefundStation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refundNodeColumn {
                get {
                    return this.columnrefundNode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refundNumberColumn {
                get {
                    return this.columnrefundNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RFNumberColumn {
                get {
                    return this.columnRFNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refundDateAndTimeColumn {
                get {
                    return this.columnrefundDateAndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefundTotalColumn {
                get {
                    return this.columnRefundTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefundVATColumn {
                get {
                    return this.columnRefundVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefundGrandTotalColumn {
                get {
                    return this.columnRefundGrandTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefundWithHoldingColumn {
                get {
                    return this.columnRefundWithHolding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefundNetPayColumn {
                get {
                    return this.columnRefundNetPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefundAmountInWordColumn {
                get {
                    return this.columnRefundAmountInWord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refundReasonColumn {
                get {
                    return this.columnrefundReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refundByColumn {
                get {
                    return this.columnrefundBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numberOfRePrintColumn {
                get {
                    return this.columnnumberOfRePrint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundSummaryRow this[int index] {
                get {
                    return ((dtRefundSummaryRow)(this.Rows[index]));
                }
            }
            
            public event dtRefundSummaryRowChangeEventHandler dtRefundSummaryRowChanging;
            
            public event dtRefundSummaryRowChangeEventHandler dtRefundSummaryRowChanged;
            
            public event dtRefundSummaryRowChangeEventHandler dtRefundSummaryRowDeleting;
            
            public event dtRefundSummaryRowChangeEventHandler dtRefundSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtRefundSummaryRow(dtRefundSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundSummaryRow AdddtRefundSummaryRow(
                        string salesId, 
                        string refundId, 
                        string refundStation, 
                        string refundNode, 
                        string refundNumber, 
                        string RFNumber, 
                        string refundDateAndTime, 
                        decimal RefundTotal, 
                        decimal RefundVAT, 
                        decimal RefundGrandTotal, 
                        decimal RefundWithHolding, 
                        decimal RefundNetPay, 
                        string RefundAmountInWord, 
                        string refundReason, 
                        string refundBy, 
                        string numberOfRePrint) {
                dtRefundSummaryRow rowdtRefundSummaryRow = ((dtRefundSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        salesId,
                        refundId,
                        refundStation,
                        refundNode,
                        refundNumber,
                        RFNumber,
                        refundDateAndTime,
                        RefundTotal,
                        RefundVAT,
                        RefundGrandTotal,
                        RefundWithHolding,
                        RefundNetPay,
                        RefundAmountInWord,
                        refundReason,
                        refundBy,
                        numberOfRePrint};
                rowdtRefundSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtRefundSummaryRow);
                return rowdtRefundSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtRefundSummaryDataTable cln = ((dtRefundSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtRefundSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsalesId = base.Columns["salesId"];
                this.columnrefundId = base.Columns["refundId"];
                this.columnrefundStation = base.Columns["refundStation"];
                this.columnrefundNode = base.Columns["refundNode"];
                this.columnrefundNumber = base.Columns["refundNumber"];
                this.columnRFNumber = base.Columns["RFNumber"];
                this.columnrefundDateAndTime = base.Columns["refundDateAndTime"];
                this.columnRefundTotal = base.Columns["RefundTotal"];
                this.columnRefundVAT = base.Columns["RefundVAT"];
                this.columnRefundGrandTotal = base.Columns["RefundGrandTotal"];
                this.columnRefundWithHolding = base.Columns["RefundWithHolding"];
                this.columnRefundNetPay = base.Columns["RefundNetPay"];
                this.columnRefundAmountInWord = base.Columns["RefundAmountInWord"];
                this.columnrefundReason = base.Columns["refundReason"];
                this.columnrefundBy = base.Columns["refundBy"];
                this.columnnumberOfRePrint = base.Columns["numberOfRePrint"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsalesId = new global::System.Data.DataColumn("salesId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalesId);
                this.columnrefundId = new global::System.Data.DataColumn("refundId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefundId);
                this.columnrefundStation = new global::System.Data.DataColumn("refundStation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefundStation);
                this.columnrefundNode = new global::System.Data.DataColumn("refundNode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefundNode);
                this.columnrefundNumber = new global::System.Data.DataColumn("refundNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefundNumber);
                this.columnRFNumber = new global::System.Data.DataColumn("RFNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFNumber);
                this.columnrefundDateAndTime = new global::System.Data.DataColumn("refundDateAndTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefundDateAndTime);
                this.columnRefundTotal = new global::System.Data.DataColumn("RefundTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefundTotal);
                this.columnRefundVAT = new global::System.Data.DataColumn("RefundVAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefundVAT);
                this.columnRefundGrandTotal = new global::System.Data.DataColumn("RefundGrandTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefundGrandTotal);
                this.columnRefundWithHolding = new global::System.Data.DataColumn("RefundWithHolding", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefundWithHolding);
                this.columnRefundNetPay = new global::System.Data.DataColumn("RefundNetPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefundNetPay);
                this.columnRefundAmountInWord = new global::System.Data.DataColumn("RefundAmountInWord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefundAmountInWord);
                this.columnrefundReason = new global::System.Data.DataColumn("refundReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefundReason);
                this.columnrefundBy = new global::System.Data.DataColumn("refundBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefundBy);
                this.columnnumberOfRePrint = new global::System.Data.DataColumn("numberOfRePrint", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumberOfRePrint);
                this.columnRefundTotal.Caption = "Sub Total";
                this.columnRefundVAT.Caption = "VAT (15%)";
                this.columnRefundGrandTotal.Caption = "Grand Total";
                this.columnRefundWithHolding.Caption = "Withholding Tax (2%)";
                this.columnRefundNetPay.Caption = "Net Paid";
                this.columnRefundAmountInWord.Caption = "Birr";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundSummaryRow NewdtRefundSummaryRow() {
                return ((dtRefundSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtRefundSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtRefundSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtRefundSummaryRowChanged != null)) {
                    this.dtRefundSummaryRowChanged(this, new dtRefundSummaryRowChangeEvent(((dtRefundSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtRefundSummaryRowChanging != null)) {
                    this.dtRefundSummaryRowChanging(this, new dtRefundSummaryRowChangeEvent(((dtRefundSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtRefundSummaryRowDeleted != null)) {
                    this.dtRefundSummaryRowDeleted(this, new dtRefundSummaryRowChangeEvent(((dtRefundSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtRefundSummaryRowDeleting != null)) {
                    this.dtRefundSummaryRowDeleting(this, new dtRefundSummaryRowChangeEvent(((dtRefundSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtRefundSummaryRow(dtRefundSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtRefundSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtPaymentSummaryDataTable : global::System.Data.TypedTableBase<dtPaymentSummaryRow> {
            
            private global::System.Data.DataColumn columnC_PAYMENT_ID;
            
            private global::System.Data.DataColumn columnStore;
            
            private global::System.Data.DataColumn columnReceived_From;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnReference;
            
            private global::System.Data.DataColumn columnTender_Type;
            
            private global::System.Data.DataColumn _columnTender_No_;
            
            private global::System.Data.DataColumn columnOther_Income;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnAmount_In_Word;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUnAllocated_Amt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentSummaryDataTable() {
                this.TableName = "dtPaymentSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtPaymentSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtPaymentSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_PAYMENT_IDColumn {
                get {
                    return this.columnC_PAYMENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreColumn {
                get {
                    return this.columnStore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Received_FromColumn {
                get {
                    return this.columnReceived_From;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceColumn {
                get {
                    return this.columnReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tender_TypeColumn {
                get {
                    return this.columnTender_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _Tender_No_Column {
                get {
                    return this._columnTender_No_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Other_IncomeColumn {
                get {
                    return this.columnOther_Income;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Amount_In_WordColumn {
                get {
                    return this.columnAmount_In_Word;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnAllocated_AmtColumn {
                get {
                    return this.columnUnAllocated_Amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentSummaryRow this[int index] {
                get {
                    return ((dtPaymentSummaryRow)(this.Rows[index]));
                }
            }
            
            public event dtPaymentSummaryRowChangeEventHandler dtPaymentSummaryRowChanging;
            
            public event dtPaymentSummaryRowChangeEventHandler dtPaymentSummaryRowChanged;
            
            public event dtPaymentSummaryRowChangeEventHandler dtPaymentSummaryRowDeleting;
            
            public event dtPaymentSummaryRowChangeEventHandler dtPaymentSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtPaymentSummaryRow(dtPaymentSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentSummaryRow AdddtPaymentSummaryRow(string C_PAYMENT_ID, string Store, string Received_From, System.DateTime Date, string Reference, string Tender_Type, string _Tender_No_, string Other_Income, decimal Amount, string Amount_In_Word, string Description, decimal UnAllocated_Amt) {
                dtPaymentSummaryRow rowdtPaymentSummaryRow = ((dtPaymentSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        C_PAYMENT_ID,
                        Store,
                        Received_From,
                        Date,
                        Reference,
                        Tender_Type,
                        _Tender_No_,
                        Other_Income,
                        Amount,
                        Amount_In_Word,
                        Description,
                        UnAllocated_Amt};
                rowdtPaymentSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtPaymentSummaryRow);
                return rowdtPaymentSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentSummaryRow FindByC_PAYMENT_ID(string C_PAYMENT_ID) {
                return ((dtPaymentSummaryRow)(this.Rows.Find(new object[] {
                            C_PAYMENT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtPaymentSummaryDataTable cln = ((dtPaymentSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtPaymentSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnC_PAYMENT_ID = base.Columns["C_PAYMENT_ID"];
                this.columnStore = base.Columns["Store"];
                this.columnReceived_From = base.Columns["Received From"];
                this.columnDate = base.Columns["Date"];
                this.columnReference = base.Columns["Reference"];
                this.columnTender_Type = base.Columns["Tender Type"];
                this._columnTender_No_ = base.Columns["Tender No."];
                this.columnOther_Income = base.Columns["Other Income"];
                this.columnAmount = base.Columns["Amount"];
                this.columnAmount_In_Word = base.Columns["Amount In Word"];
                this.columnDescription = base.Columns["Description"];
                this.columnUnAllocated_Amt = base.Columns["UnAllocated Amt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnC_PAYMENT_ID = new global::System.Data.DataColumn("C_PAYMENT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_PAYMENT_ID);
                this.columnStore = new global::System.Data.DataColumn("Store", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStore);
                this.columnReceived_From = new global::System.Data.DataColumn("Received From", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceived_From);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnReference = new global::System.Data.DataColumn("Reference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference);
                this.columnTender_Type = new global::System.Data.DataColumn("Tender Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTender_Type);
                this._columnTender_No_ = new global::System.Data.DataColumn("Tender No.", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnTender_No_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnTender_No_");
                this._columnTender_No_.ExtendedProperties.Add("Generator_UserColumnName", "Tender No.");
                base.Columns.Add(this._columnTender_No_);
                this.columnOther_Income = new global::System.Data.DataColumn("Other Income", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther_Income);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnAmount_In_Word = new global::System.Data.DataColumn("Amount In Word", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount_In_Word);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUnAllocated_Amt = new global::System.Data.DataColumn("UnAllocated Amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnAllocated_Amt);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnC_PAYMENT_ID}, true));
                this.columnC_PAYMENT_ID.AllowDBNull = false;
                this.columnC_PAYMENT_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentSummaryRow NewdtPaymentSummaryRow() {
                return ((dtPaymentSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtPaymentSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtPaymentSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtPaymentSummaryRowChanged != null)) {
                    this.dtPaymentSummaryRowChanged(this, new dtPaymentSummaryRowChangeEvent(((dtPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtPaymentSummaryRowChanging != null)) {
                    this.dtPaymentSummaryRowChanging(this, new dtPaymentSummaryRowChangeEvent(((dtPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtPaymentSummaryRowDeleted != null)) {
                    this.dtPaymentSummaryRowDeleted(this, new dtPaymentSummaryRowChangeEvent(((dtPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtPaymentSummaryRowDeleting != null)) {
                    this.dtPaymentSummaryRowDeleting(this, new dtPaymentSummaryRowChangeEvent(((dtPaymentSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtPaymentSummaryRow(dtPaymentSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtPaymentSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtPaymentDetailDataTable : global::System.Data.TypedTableBase<dtPaymentDetailRow> {
            
            private global::System.Data.DataColumn columnC_PAYMENTALLOCATE_ID;
            
            private global::System.Data.DataColumn columnC_PAYMENT_ID;
            
            private global::System.Data.DataColumn columnSn;
            
            private global::System.Data.DataColumn columnInvoice;
            
            private global::System.Data.DataColumn columnDated;
            
            private global::System.Data.DataColumn columnInvoiced;
            
            private global::System.Data.DataColumn columnPending;
            
            private global::System.Data.DataColumn columnPaid;
            
            private global::System.Data.DataColumn columnRemaining;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentDetailDataTable() {
                this.TableName = "dtPaymentDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtPaymentDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtPaymentDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_PAYMENTALLOCATE_IDColumn {
                get {
                    return this.columnC_PAYMENTALLOCATE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_PAYMENT_IDColumn {
                get {
                    return this.columnC_PAYMENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SnColumn {
                get {
                    return this.columnSn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceColumn {
                get {
                    return this.columnInvoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatedColumn {
                get {
                    return this.columnDated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoicedColumn {
                get {
                    return this.columnInvoiced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PendingColumn {
                get {
                    return this.columnPending;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidColumn {
                get {
                    return this.columnPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemainingColumn {
                get {
                    return this.columnRemaining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentDetailRow this[int index] {
                get {
                    return ((dtPaymentDetailRow)(this.Rows[index]));
                }
            }
            
            public event dtPaymentDetailRowChangeEventHandler dtPaymentDetailRowChanging;
            
            public event dtPaymentDetailRowChangeEventHandler dtPaymentDetailRowChanged;
            
            public event dtPaymentDetailRowChangeEventHandler dtPaymentDetailRowDeleting;
            
            public event dtPaymentDetailRowChangeEventHandler dtPaymentDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtPaymentDetailRow(dtPaymentDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentDetailRow AdddtPaymentDetailRow(string C_PAYMENTALLOCATE_ID, string C_PAYMENT_ID, string Sn, string Invoice, System.DateTime Dated, decimal Invoiced, decimal Pending, decimal Paid, decimal Remaining, string Description) {
                dtPaymentDetailRow rowdtPaymentDetailRow = ((dtPaymentDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        C_PAYMENTALLOCATE_ID,
                        C_PAYMENT_ID,
                        Sn,
                        Invoice,
                        Dated,
                        Invoiced,
                        Pending,
                        Paid,
                        Remaining,
                        Description};
                rowdtPaymentDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtPaymentDetailRow);
                return rowdtPaymentDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtPaymentDetailDataTable cln = ((dtPaymentDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtPaymentDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnC_PAYMENTALLOCATE_ID = base.Columns["C_PAYMENTALLOCATE_ID"];
                this.columnC_PAYMENT_ID = base.Columns["C_PAYMENT_ID"];
                this.columnSn = base.Columns["Sn"];
                this.columnInvoice = base.Columns["Invoice"];
                this.columnDated = base.Columns["Dated"];
                this.columnInvoiced = base.Columns["Invoiced"];
                this.columnPending = base.Columns["Pending"];
                this.columnPaid = base.Columns["Paid"];
                this.columnRemaining = base.Columns["Remaining"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnC_PAYMENTALLOCATE_ID = new global::System.Data.DataColumn("C_PAYMENTALLOCATE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_PAYMENTALLOCATE_ID);
                this.columnC_PAYMENT_ID = new global::System.Data.DataColumn("C_PAYMENT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_PAYMENT_ID);
                this.columnSn = new global::System.Data.DataColumn("Sn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSn);
                this.columnInvoice = new global::System.Data.DataColumn("Invoice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoice);
                this.columnDated = new global::System.Data.DataColumn("Dated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDated);
                this.columnInvoiced = new global::System.Data.DataColumn("Invoiced", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiced);
                this.columnPending = new global::System.Data.DataColumn("Pending", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPending);
                this.columnPaid = new global::System.Data.DataColumn("Paid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid);
                this.columnRemaining = new global::System.Data.DataColumn("Remaining", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemaining);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentDetailRow NewdtPaymentDetailRow() {
                return ((dtPaymentDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtPaymentDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtPaymentDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtPaymentDetailRowChanged != null)) {
                    this.dtPaymentDetailRowChanged(this, new dtPaymentDetailRowChangeEvent(((dtPaymentDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtPaymentDetailRowChanging != null)) {
                    this.dtPaymentDetailRowChanging(this, new dtPaymentDetailRowChangeEvent(((dtPaymentDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtPaymentDetailRowDeleted != null)) {
                    this.dtPaymentDetailRowDeleted(this, new dtPaymentDetailRowChangeEvent(((dtPaymentDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtPaymentDetailRowDeleting != null)) {
                    this.dtPaymentDetailRowDeleting(this, new dtPaymentDetailRowChangeEvent(((dtPaymentDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtPaymentDetailRow(dtPaymentDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtPaymentDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCashDepositDataTable : global::System.Data.TypedTableBase<dtCashDepositRow> {
            
            private global::System.Data.DataColumn columnC_CASH_ID;
            
            private global::System.Data.DataColumn columnAD_ORG_ID;
            
            private global::System.Data.DataColumn columnSN;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnSTATEMENTDATE;
            
            private global::System.Data.DataColumn columnENDINGBALANCE;
            
            private global::System.Data.DataColumn columnSTATEMENTDIFFERENCE;
            
            private global::System.Data.DataColumn columnC_BANKACCOUNT_ID;
            
            private global::System.Data.DataColumn columnBANKACCOUNT;
            
            private global::System.Data.DataColumn columnSTORE;
            
            private global::System.Data.DataColumn columnDateRange;
            
            private global::System.Data.DataColumn columnOVERUNDER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDataTable() {
                this.TableName = "dtCashDeposit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCashDepositDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtCashDepositDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_CASH_IDColumn {
                get {
                    return this.columnC_CASH_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AD_ORG_IDColumn {
                get {
                    return this.columnAD_ORG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SNColumn {
                get {
                    return this.columnSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATEMENTDATEColumn {
                get {
                    return this.columnSTATEMENTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENDINGBALANCEColumn {
                get {
                    return this.columnENDINGBALANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATEMENTDIFFERENCEColumn {
                get {
                    return this.columnSTATEMENTDIFFERENCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_BANKACCOUNT_IDColumn {
                get {
                    return this.columnC_BANKACCOUNT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANKACCOUNTColumn {
                get {
                    return this.columnBANKACCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOREColumn {
                get {
                    return this.columnSTORE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateRangeColumn {
                get {
                    return this.columnDateRange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OVERUNDERColumn {
                get {
                    return this.columnOVERUNDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositRow this[int index] {
                get {
                    return ((dtCashDepositRow)(this.Rows[index]));
                }
            }
            
            public event dtCashDepositRowChangeEventHandler dtCashDepositRowChanging;
            
            public event dtCashDepositRowChangeEventHandler dtCashDepositRowChanged;
            
            public event dtCashDepositRowChangeEventHandler dtCashDepositRowDeleting;
            
            public event dtCashDepositRowChangeEventHandler dtCashDepositRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtCashDepositRow(dtCashDepositRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositRow AdddtCashDepositRow(string C_CASH_ID, string AD_ORG_ID, string SN, string NAME, string DESCRIPTION, System.DateTime STATEMENTDATE, decimal ENDINGBALANCE, decimal STATEMENTDIFFERENCE, string C_BANKACCOUNT_ID, string BANKACCOUNT, string STORE, string DateRange, decimal OVERUNDER) {
                dtCashDepositRow rowdtCashDepositRow = ((dtCashDepositRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        C_CASH_ID,
                        AD_ORG_ID,
                        SN,
                        NAME,
                        DESCRIPTION,
                        STATEMENTDATE,
                        ENDINGBALANCE,
                        STATEMENTDIFFERENCE,
                        C_BANKACCOUNT_ID,
                        BANKACCOUNT,
                        STORE,
                        DateRange,
                        OVERUNDER};
                rowdtCashDepositRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtCashDepositRow);
                return rowdtCashDepositRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositRow FindByC_CASH_ID(string C_CASH_ID) {
                return ((dtCashDepositRow)(this.Rows.Find(new object[] {
                            C_CASH_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtCashDepositDataTable cln = ((dtCashDepositDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtCashDepositDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnC_CASH_ID = base.Columns["C_CASH_ID"];
                this.columnAD_ORG_ID = base.Columns["AD_ORG_ID"];
                this.columnSN = base.Columns["SN"];
                this.columnNAME = base.Columns["NAME"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnSTATEMENTDATE = base.Columns["STATEMENTDATE"];
                this.columnENDINGBALANCE = base.Columns["ENDINGBALANCE"];
                this.columnSTATEMENTDIFFERENCE = base.Columns["STATEMENTDIFFERENCE"];
                this.columnC_BANKACCOUNT_ID = base.Columns["C_BANKACCOUNT_ID"];
                this.columnBANKACCOUNT = base.Columns["BANKACCOUNT"];
                this.columnSTORE = base.Columns["STORE"];
                this.columnDateRange = base.Columns["DateRange"];
                this.columnOVERUNDER = base.Columns["OVERUNDER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnC_CASH_ID = new global::System.Data.DataColumn("C_CASH_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_CASH_ID);
                this.columnAD_ORG_ID = new global::System.Data.DataColumn("AD_ORG_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAD_ORG_ID);
                this.columnSN = new global::System.Data.DataColumn("SN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSN);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnSTATEMENTDATE = new global::System.Data.DataColumn("STATEMENTDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATEMENTDATE);
                this.columnENDINGBALANCE = new global::System.Data.DataColumn("ENDINGBALANCE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDINGBALANCE);
                this.columnSTATEMENTDIFFERENCE = new global::System.Data.DataColumn("STATEMENTDIFFERENCE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATEMENTDIFFERENCE);
                this.columnC_BANKACCOUNT_ID = new global::System.Data.DataColumn("C_BANKACCOUNT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_BANKACCOUNT_ID);
                this.columnBANKACCOUNT = new global::System.Data.DataColumn("BANKACCOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANKACCOUNT);
                this.columnSTORE = new global::System.Data.DataColumn("STORE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE);
                this.columnDateRange = new global::System.Data.DataColumn("DateRange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateRange);
                this.columnOVERUNDER = new global::System.Data.DataColumn("OVERUNDER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVERUNDER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnC_CASH_ID}, true));
                this.columnC_CASH_ID.AllowDBNull = false;
                this.columnC_CASH_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositRow NewdtCashDepositRow() {
                return ((dtCashDepositRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtCashDepositRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtCashDepositRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCashDepositRowChanged != null)) {
                    this.dtCashDepositRowChanged(this, new dtCashDepositRowChangeEvent(((dtCashDepositRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCashDepositRowChanging != null)) {
                    this.dtCashDepositRowChanging(this, new dtCashDepositRowChangeEvent(((dtCashDepositRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCashDepositRowDeleted != null)) {
                    this.dtCashDepositRowDeleted(this, new dtCashDepositRowChangeEvent(((dtCashDepositRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCashDepositRowDeleting != null)) {
                    this.dtCashDepositRowDeleting(this, new dtCashDepositRowChangeEvent(((dtCashDepositRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtCashDepositRow(dtCashDepositRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCashDepositDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCashDepositDtlSrcDataTable : global::System.Data.TypedTableBase<dtCashDepositDtlSrcRow> {
            
            private global::System.Data.DataColumn columnC_CASHLINESOURCE_ID;
            
            private global::System.Data.DataColumn columnC_CASHLINE_ID;
            
            private global::System.Data.DataColumn columnSOURCETYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDtlSrcDataTable() {
                this.TableName = "dtCashDepositDtlSrc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCashDepositDtlSrcDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtCashDepositDtlSrcDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_CASHLINESOURCE_IDColumn {
                get {
                    return this.columnC_CASHLINESOURCE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_CASHLINE_IDColumn {
                get {
                    return this.columnC_CASHLINE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOURCETYPEColumn {
                get {
                    return this.columnSOURCETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDtlSrcRow this[int index] {
                get {
                    return ((dtCashDepositDtlSrcRow)(this.Rows[index]));
                }
            }
            
            public event dtCashDepositDtlSrcRowChangeEventHandler dtCashDepositDtlSrcRowChanging;
            
            public event dtCashDepositDtlSrcRowChangeEventHandler dtCashDepositDtlSrcRowChanged;
            
            public event dtCashDepositDtlSrcRowChangeEventHandler dtCashDepositDtlSrcRowDeleting;
            
            public event dtCashDepositDtlSrcRowChangeEventHandler dtCashDepositDtlSrcRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtCashDepositDtlSrcRow(dtCashDepositDtlSrcRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDtlSrcRow AdddtCashDepositDtlSrcRow(string C_CASHLINESOURCE_ID, string C_CASHLINE_ID, string SOURCETYPE) {
                dtCashDepositDtlSrcRow rowdtCashDepositDtlSrcRow = ((dtCashDepositDtlSrcRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        C_CASHLINESOURCE_ID,
                        C_CASHLINE_ID,
                        SOURCETYPE};
                rowdtCashDepositDtlSrcRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtCashDepositDtlSrcRow);
                return rowdtCashDepositDtlSrcRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtCashDepositDtlSrcDataTable cln = ((dtCashDepositDtlSrcDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtCashDepositDtlSrcDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnC_CASHLINESOURCE_ID = base.Columns["C_CASHLINESOURCE_ID"];
                this.columnC_CASHLINE_ID = base.Columns["C_CASHLINE_ID"];
                this.columnSOURCETYPE = base.Columns["SOURCETYPE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnC_CASHLINESOURCE_ID = new global::System.Data.DataColumn("C_CASHLINESOURCE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_CASHLINESOURCE_ID);
                this.columnC_CASHLINE_ID = new global::System.Data.DataColumn("C_CASHLINE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_CASHLINE_ID);
                this.columnSOURCETYPE = new global::System.Data.DataColumn("SOURCETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOURCETYPE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDtlSrcRow NewdtCashDepositDtlSrcRow() {
                return ((dtCashDepositDtlSrcRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtCashDepositDtlSrcRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtCashDepositDtlSrcRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCashDepositDtlSrcRowChanged != null)) {
                    this.dtCashDepositDtlSrcRowChanged(this, new dtCashDepositDtlSrcRowChangeEvent(((dtCashDepositDtlSrcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCashDepositDtlSrcRowChanging != null)) {
                    this.dtCashDepositDtlSrcRowChanging(this, new dtCashDepositDtlSrcRowChangeEvent(((dtCashDepositDtlSrcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCashDepositDtlSrcRowDeleted != null)) {
                    this.dtCashDepositDtlSrcRowDeleted(this, new dtCashDepositDtlSrcRowChangeEvent(((dtCashDepositDtlSrcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCashDepositDtlSrcRowDeleting != null)) {
                    this.dtCashDepositDtlSrcRowDeleting(this, new dtCashDepositDtlSrcRowChangeEvent(((dtCashDepositDtlSrcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtCashDepositDtlSrcRow(dtCashDepositDtlSrcRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCashDepositDtlSrcDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCashDepositDetailDataTable : global::System.Data.TypedTableBase<dtCashDepositDetailRow> {
            
            private global::System.Data.DataColumn columnC_CASHLINE_ID;
            
            private global::System.Data.DataColumn columnC_CASH_ID;
            
            private global::System.Data.DataColumn columnDES_CASHLINE;
            
            private global::System.Data.DataColumn columnAMOUNT_CASHLINE;
            
            private global::System.Data.DataColumn columnTENDERTYPE;
            
            private global::System.Data.DataColumn columnCHECKNO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDetailDataTable() {
                this.TableName = "dtCashDepositDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCashDepositDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtCashDepositDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_CASHLINE_IDColumn {
                get {
                    return this.columnC_CASHLINE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_CASH_IDColumn {
                get {
                    return this.columnC_CASH_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DES_CASHLINEColumn {
                get {
                    return this.columnDES_CASHLINE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AMOUNT_CASHLINEColumn {
                get {
                    return this.columnAMOUNT_CASHLINE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENDERTYPEColumn {
                get {
                    return this.columnTENDERTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHECKNOColumn {
                get {
                    return this.columnCHECKNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDetailRow this[int index] {
                get {
                    return ((dtCashDepositDetailRow)(this.Rows[index]));
                }
            }
            
            public event dtCashDepositDetailRowChangeEventHandler dtCashDepositDetailRowChanging;
            
            public event dtCashDepositDetailRowChangeEventHandler dtCashDepositDetailRowChanged;
            
            public event dtCashDepositDetailRowChangeEventHandler dtCashDepositDetailRowDeleting;
            
            public event dtCashDepositDetailRowChangeEventHandler dtCashDepositDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtCashDepositDetailRow(dtCashDepositDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDetailRow AdddtCashDepositDetailRow(string C_CASHLINE_ID, string C_CASH_ID, string DES_CASHLINE, decimal AMOUNT_CASHLINE, string TENDERTYPE, string CHECKNO) {
                dtCashDepositDetailRow rowdtCashDepositDetailRow = ((dtCashDepositDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        C_CASHLINE_ID,
                        C_CASH_ID,
                        DES_CASHLINE,
                        AMOUNT_CASHLINE,
                        TENDERTYPE,
                        CHECKNO};
                rowdtCashDepositDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtCashDepositDetailRow);
                return rowdtCashDepositDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDetailRow FindByC_CASHLINE_ID(string C_CASHLINE_ID) {
                return ((dtCashDepositDetailRow)(this.Rows.Find(new object[] {
                            C_CASHLINE_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtCashDepositDetailDataTable cln = ((dtCashDepositDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtCashDepositDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnC_CASHLINE_ID = base.Columns["C_CASHLINE_ID"];
                this.columnC_CASH_ID = base.Columns["C_CASH_ID"];
                this.columnDES_CASHLINE = base.Columns["DES_CASHLINE"];
                this.columnAMOUNT_CASHLINE = base.Columns["AMOUNT_CASHLINE"];
                this.columnTENDERTYPE = base.Columns["TENDERTYPE"];
                this.columnCHECKNO = base.Columns["CHECKNO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnC_CASHLINE_ID = new global::System.Data.DataColumn("C_CASHLINE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_CASHLINE_ID);
                this.columnC_CASH_ID = new global::System.Data.DataColumn("C_CASH_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_CASH_ID);
                this.columnDES_CASHLINE = new global::System.Data.DataColumn("DES_CASHLINE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDES_CASHLINE);
                this.columnAMOUNT_CASHLINE = new global::System.Data.DataColumn("AMOUNT_CASHLINE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT_CASHLINE);
                this.columnTENDERTYPE = new global::System.Data.DataColumn("TENDERTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENDERTYPE);
                this.columnCHECKNO = new global::System.Data.DataColumn("CHECKNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHECKNO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnC_CASHLINE_ID}, true));
                this.columnC_CASHLINE_ID.AllowDBNull = false;
                this.columnC_CASHLINE_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDetailRow NewdtCashDepositDetailRow() {
                return ((dtCashDepositDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtCashDepositDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtCashDepositDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCashDepositDetailRowChanged != null)) {
                    this.dtCashDepositDetailRowChanged(this, new dtCashDepositDetailRowChangeEvent(((dtCashDepositDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCashDepositDetailRowChanging != null)) {
                    this.dtCashDepositDetailRowChanging(this, new dtCashDepositDetailRowChangeEvent(((dtCashDepositDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCashDepositDetailRowDeleted != null)) {
                    this.dtCashDepositDetailRowDeleted(this, new dtCashDepositDetailRowChangeEvent(((dtCashDepositDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCashDepositDetailRowDeleting != null)) {
                    this.dtCashDepositDetailRowDeleting(this, new dtCashDepositDetailRowChangeEvent(((dtCashDepositDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtCashDepositDetailRow(dtCashDepositDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCashDepositDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtRefundDetailDataTable : global::System.Data.TypedTableBase<dtRefundDetailRow> {
            
            private global::System.Data.DataColumn columnrefundDetailId;
            
            private global::System.Data.DataColumn columnrefundDetailStation;
            
            private global::System.Data.DataColumn columnrefundDetailNode;
            
            private global::System.Data.DataColumn columnrefundID;
            
            private global::System.Data.DataColumn columnitem_id;
            
            private global::System.Data.DataColumn columnlocatorFromId;
            
            private global::System.Data.DataColumn _columnSn_;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnComment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundDetailDataTable() {
                this.TableName = "dtRefundDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtRefundDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtRefundDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refundDetailIdColumn {
                get {
                    return this.columnrefundDetailId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refundDetailStationColumn {
                get {
                    return this.columnrefundDetailStation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refundDetailNodeColumn {
                get {
                    return this.columnrefundDetailNode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refundIDColumn {
                get {
                    return this.columnrefundID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn item_idColumn {
                get {
                    return this.columnitem_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn locatorFromIdColumn {
                get {
                    return this.columnlocatorFromId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _Sn_Column {
                get {
                    return this._columnSn_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundDetailRow this[int index] {
                get {
                    return ((dtRefundDetailRow)(this.Rows[index]));
                }
            }
            
            public event dtRefundDetailRowChangeEventHandler dtRefundDetailRowChanging;
            
            public event dtRefundDetailRowChangeEventHandler dtRefundDetailRowChanged;
            
            public event dtRefundDetailRowChangeEventHandler dtRefundDetailRowDeleting;
            
            public event dtRefundDetailRowChangeEventHandler dtRefundDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtRefundDetailRow(dtRefundDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundDetailRow AdddtRefundDetailRow(string refundDetailId, string refundDetailStation, string refundDetailNode, string refundID, string item_id, string locatorFromId, string _Sn_, string Description, string Quantity, string UOM, decimal UnitPrice, decimal TotalAmount, string Comment) {
                dtRefundDetailRow rowdtRefundDetailRow = ((dtRefundDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        refundDetailId,
                        refundDetailStation,
                        refundDetailNode,
                        refundID,
                        item_id,
                        locatorFromId,
                        _Sn_,
                        Description,
                        Quantity,
                        UOM,
                        UnitPrice,
                        TotalAmount,
                        Comment};
                rowdtRefundDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtRefundDetailRow);
                return rowdtRefundDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtRefundDetailDataTable cln = ((dtRefundDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtRefundDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrefundDetailId = base.Columns["refundDetailId"];
                this.columnrefundDetailStation = base.Columns["refundDetailStation"];
                this.columnrefundDetailNode = base.Columns["refundDetailNode"];
                this.columnrefundID = base.Columns["refundID"];
                this.columnitem_id = base.Columns["item_id"];
                this.columnlocatorFromId = base.Columns["locatorFromId"];
                this._columnSn_ = base.Columns["Sn."];
                this.columnDescription = base.Columns["Description"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUOM = base.Columns["UOM"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnComment = base.Columns["Comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrefundDetailId = new global::System.Data.DataColumn("refundDetailId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefundDetailId);
                this.columnrefundDetailStation = new global::System.Data.DataColumn("refundDetailStation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefundDetailStation);
                this.columnrefundDetailNode = new global::System.Data.DataColumn("refundDetailNode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefundDetailNode);
                this.columnrefundID = new global::System.Data.DataColumn("refundID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefundID);
                this.columnitem_id = new global::System.Data.DataColumn("item_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem_id);
                this.columnlocatorFromId = new global::System.Data.DataColumn("locatorFromId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocatorFromId);
                this._columnSn_ = new global::System.Data.DataColumn("Sn.", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnSn_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSn_");
                this._columnSn_.ExtendedProperties.Add("Generator_UserColumnName", "Sn.");
                base.Columns.Add(this._columnSn_);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnrefundDetailId.Caption = "salesDetailId";
                this.columnrefundDetailStation.Caption = "salesDetailStation";
                this.columnrefundDetailNode.Caption = "salesDetailNode";
                this.columnrefundID.Caption = "salesID";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundDetailRow NewdtRefundDetailRow() {
                return ((dtRefundDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtRefundDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtRefundDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtRefundDetailRowChanged != null)) {
                    this.dtRefundDetailRowChanged(this, new dtRefundDetailRowChangeEvent(((dtRefundDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtRefundDetailRowChanging != null)) {
                    this.dtRefundDetailRowChanging(this, new dtRefundDetailRowChangeEvent(((dtRefundDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtRefundDetailRowDeleted != null)) {
                    this.dtRefundDetailRowDeleted(this, new dtRefundDetailRowChangeEvent(((dtRefundDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtRefundDetailRowDeleting != null)) {
                    this.dtRefundDetailRowDeleting(this, new dtRefundDetailRowChangeEvent(((dtRefundDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtRefundDetailRow(dtRefundDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtRefundDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtOpenInvoiceDataTable : global::System.Data.TypedTableBase<dtOpenInvoiceRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnStation;
            
            private global::System.Data.DataColumn columnNode;
            
            private global::System.Data.DataColumn columnOrganisation;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnDateSold;
            
            private global::System.Data.DataColumn columnDocument;
            
            private global::System.Data.DataColumn columnSalesAmount;
            
            private global::System.Data.DataColumn columnRemainingAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOpenInvoiceDataTable() {
                this.TableName = "dtOpenInvoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtOpenInvoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtOpenInvoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StationColumn {
                get {
                    return this.columnStation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NodeColumn {
                get {
                    return this.columnNode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganisationColumn {
                get {
                    return this.columnOrganisation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateSoldColumn {
                get {
                    return this.columnDateSold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentColumn {
                get {
                    return this.columnDocument;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesAmountColumn {
                get {
                    return this.columnSalesAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemainingAmountColumn {
                get {
                    return this.columnRemainingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOpenInvoiceRow this[int index] {
                get {
                    return ((dtOpenInvoiceRow)(this.Rows[index]));
                }
            }
            
            public event dtOpenInvoiceRowChangeEventHandler dtOpenInvoiceRowChanging;
            
            public event dtOpenInvoiceRowChangeEventHandler dtOpenInvoiceRowChanged;
            
            public event dtOpenInvoiceRowChangeEventHandler dtOpenInvoiceRowDeleting;
            
            public event dtOpenInvoiceRowChangeEventHandler dtOpenInvoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtOpenInvoiceRow(dtOpenInvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOpenInvoiceRow AdddtOpenInvoiceRow(string ID, string Station, string Node, string Organisation, string Customer, System.DateTime DateSold, string Document, decimal SalesAmount, decimal RemainingAmount) {
                dtOpenInvoiceRow rowdtOpenInvoiceRow = ((dtOpenInvoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Station,
                        Node,
                        Organisation,
                        Customer,
                        DateSold,
                        Document,
                        SalesAmount,
                        RemainingAmount};
                rowdtOpenInvoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtOpenInvoiceRow);
                return rowdtOpenInvoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOpenInvoiceRow FindByIDStation(string ID, string Station) {
                return ((dtOpenInvoiceRow)(this.Rows.Find(new object[] {
                            ID,
                            Station})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtOpenInvoiceDataTable cln = ((dtOpenInvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtOpenInvoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnStation = base.Columns["Station"];
                this.columnNode = base.Columns["Node"];
                this.columnOrganisation = base.Columns["Organisation"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnDateSold = base.Columns["DateSold"];
                this.columnDocument = base.Columns["Document"];
                this.columnSalesAmount = base.Columns["SalesAmount"];
                this.columnRemainingAmount = base.Columns["RemainingAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnStation = new global::System.Data.DataColumn("Station", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStation);
                this.columnNode = new global::System.Data.DataColumn("Node", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNode);
                this.columnOrganisation = new global::System.Data.DataColumn("Organisation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganisation);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnDateSold = new global::System.Data.DataColumn("DateSold", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateSold);
                this.columnDocument = new global::System.Data.DataColumn("Document", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocument);
                this.columnSalesAmount = new global::System.Data.DataColumn("SalesAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesAmount);
                this.columnRemainingAmount = new global::System.Data.DataColumn("RemainingAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemainingAmount);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnStation}, true));
                this.columnID.AllowDBNull = false;
                this.columnStation.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOpenInvoiceRow NewdtOpenInvoiceRow() {
                return ((dtOpenInvoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtOpenInvoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtOpenInvoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtOpenInvoiceRowChanged != null)) {
                    this.dtOpenInvoiceRowChanged(this, new dtOpenInvoiceRowChangeEvent(((dtOpenInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtOpenInvoiceRowChanging != null)) {
                    this.dtOpenInvoiceRowChanging(this, new dtOpenInvoiceRowChangeEvent(((dtOpenInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtOpenInvoiceRowDeleted != null)) {
                    this.dtOpenInvoiceRowDeleted(this, new dtOpenInvoiceRowChangeEvent(((dtOpenInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtOpenInvoiceRowDeleting != null)) {
                    this.dtOpenInvoiceRowDeleting(this, new dtOpenInvoiceRowChangeEvent(((dtOpenInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtOpenInvoiceRow(dtOpenInvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtOpenInvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtUserInfoDataTable : global::System.Data.TypedTableBase<dtUserInfoRow> {
            
            private global::System.Data.DataColumn columnFullUserName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtUserInfoDataTable() {
                this.TableName = "dtUserInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtUserInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtUserInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullUserNameColumn {
                get {
                    return this.columnFullUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtUserInfoRow this[int index] {
                get {
                    return ((dtUserInfoRow)(this.Rows[index]));
                }
            }
            
            public event dtUserInfoRowChangeEventHandler dtUserInfoRowChanging;
            
            public event dtUserInfoRowChangeEventHandler dtUserInfoRowChanged;
            
            public event dtUserInfoRowChangeEventHandler dtUserInfoRowDeleting;
            
            public event dtUserInfoRowChangeEventHandler dtUserInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtUserInfoRow(dtUserInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtUserInfoRow AdddtUserInfoRow(string FullUserName) {
                dtUserInfoRow rowdtUserInfoRow = ((dtUserInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FullUserName};
                rowdtUserInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtUserInfoRow);
                return rowdtUserInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtUserInfoDataTable cln = ((dtUserInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtUserInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFullUserName = base.Columns["FullUserName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFullUserName = new global::System.Data.DataColumn("FullUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullUserName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtUserInfoRow NewdtUserInfoRow() {
                return ((dtUserInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtUserInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtUserInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtUserInfoRowChanged != null)) {
                    this.dtUserInfoRowChanged(this, new dtUserInfoRowChangeEvent(((dtUserInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtUserInfoRowChanging != null)) {
                    this.dtUserInfoRowChanging(this, new dtUserInfoRowChangeEvent(((dtUserInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtUserInfoRowDeleted != null)) {
                    this.dtUserInfoRowDeleted(this, new dtUserInfoRowChangeEvent(((dtUserInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtUserInfoRowDeleting != null)) {
                    this.dtUserInfoRowDeleting(this, new dtUserInfoRowChangeEvent(((dtUserInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtUserInfoRow(dtUserInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPOSDocumentData ds = new dtsPOSDocumentData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtUserInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtAttachmentSummaryRow : global::System.Data.DataRow {
            
            private dtAttachmentSummaryDataTable tabledtAttachmentSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtAttachmentSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtAttachmentSummary = ((dtAttachmentSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salesID {
                get {
                    return ((string)(this[this.tabledtAttachmentSummary.salesIDColumn]));
                }
                set {
                    this[this.tabledtAttachmentSummary.salesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stationID {
                get {
                    return ((string)(this[this.tabledtAttachmentSummary.stationIDColumn]));
                }
                set {
                    this[this.tabledtAttachmentSummary.stationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nodeID {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.nodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nodeID\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.nodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DocumentName {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.DocumentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentName\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.DocumentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesPerson {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.SalesPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesPerson\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.SalesPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepartmentStore {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.DepartmentStoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepartmentStore\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.DepartmentStoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryOrderNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.DeliveryOrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryOrderNumber\' in table \'dtAttachmentSummary\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.DeliveryOrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FSNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.FSNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FSNumber\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.FSNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceNumber {
                get {
                    return ((string)(this[this.tabledtAttachmentSummary.ReferenceNumberColumn]));
                }
                set {
                    this[this.tabledtAttachmentSummary.ReferenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtAttachmentSummary.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtAttachmentSummary.TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Time\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuyersTradeName {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.BuyersTradeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyersTradeName\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.BuyersTradeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuyersTIN {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.BuyersTINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyersTIN\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.BuyersTINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuyersVAT {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.BuyersVATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyersVAT\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.BuyersVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuyersZoneORSubCity {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.BuyersZoneORSubCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyersZoneORSubCity\' in table \'dtAttachmentSummary\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.BuyersZoneORSubCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuyersKebele {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.BuyersKebeleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyersKebele\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.BuyersKebeleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuyersHouseNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.BuyersHouseNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyersHouseNumber\' in table \'dtAttachmentSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.BuyersHouseNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuyersPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.BuyersPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyersPhoneNumber\' in table \'dtAttachmentSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.BuyersPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalesTotal {
                get {
                    try {
                        return ((decimal)(this[this.tabledtAttachmentSummary.SalesTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTotal\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.SalesTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalesVAT {
                get {
                    try {
                        return ((decimal)(this[this.tabledtAttachmentSummary.SalesVATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesVAT\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.SalesVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalesGrandTotal {
                get {
                    try {
                        return ((decimal)(this[this.tabledtAttachmentSummary.SalesGrandTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesGrandTotal\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.SalesGrandTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalesWithHolding {
                get {
                    try {
                        return ((decimal)(this[this.tabledtAttachmentSummary.SalesWithHoldingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesWithHolding\' in table \'dtAttachmentSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.SalesWithHoldingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalesNetPay {
                get {
                    try {
                        return ((decimal)(this[this.tabledtAttachmentSummary.SalesNetPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesNetPay\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.SalesNetPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesAmountInWord {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.SalesAmountInWordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesAmountInWord\' in table \'dtAttachmentSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.SalesAmountInWordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesPaymentMethod {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.SalesPaymentMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesPaymentMethod\' in table \'dtAttachmentSummary\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.SalesPaymentMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MRC {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.MRCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MRC\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.MRCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Note {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Note\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string numberOfRePrint {
                get {
                    try {
                        return ((string)(this[this.tabledtAttachmentSummary.numberOfRePrintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numberOfRePrint\' in table \'dtAttachmentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAttachmentSummary.numberOfRePrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnodeIDNull() {
                return this.IsNull(this.tabledtAttachmentSummary.nodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnodeIDNull() {
                this[this.tabledtAttachmentSummary.nodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentNameNull() {
                return this.IsNull(this.tabledtAttachmentSummary.DocumentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentNameNull() {
                this[this.tabledtAttachmentSummary.DocumentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesPersonNull() {
                return this.IsNull(this.tabledtAttachmentSummary.SalesPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesPersonNull() {
                this[this.tabledtAttachmentSummary.SalesPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentStoreNull() {
                return this.IsNull(this.tabledtAttachmentSummary.DepartmentStoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentStoreNull() {
                this[this.tabledtAttachmentSummary.DepartmentStoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryOrderNumberNull() {
                return this.IsNull(this.tabledtAttachmentSummary.DeliveryOrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryOrderNumberNull() {
                this[this.tabledtAttachmentSummary.DeliveryOrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFSNumberNull() {
                return this.IsNull(this.tabledtAttachmentSummary.FSNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFSNumberNull() {
                this[this.tabledtAttachmentSummary.FSNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tabledtAttachmentSummary.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tabledtAttachmentSummary.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeNull() {
                return this.IsNull(this.tabledtAttachmentSummary.TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeNull() {
                this[this.tabledtAttachmentSummary.TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyersTradeNameNull() {
                return this.IsNull(this.tabledtAttachmentSummary.BuyersTradeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuyersTradeNameNull() {
                this[this.tabledtAttachmentSummary.BuyersTradeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyersTINNull() {
                return this.IsNull(this.tabledtAttachmentSummary.BuyersTINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuyersTINNull() {
                this[this.tabledtAttachmentSummary.BuyersTINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyersVATNull() {
                return this.IsNull(this.tabledtAttachmentSummary.BuyersVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuyersVATNull() {
                this[this.tabledtAttachmentSummary.BuyersVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyersZoneORSubCityNull() {
                return this.IsNull(this.tabledtAttachmentSummary.BuyersZoneORSubCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuyersZoneORSubCityNull() {
                this[this.tabledtAttachmentSummary.BuyersZoneORSubCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyersKebeleNull() {
                return this.IsNull(this.tabledtAttachmentSummary.BuyersKebeleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuyersKebeleNull() {
                this[this.tabledtAttachmentSummary.BuyersKebeleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyersHouseNumberNull() {
                return this.IsNull(this.tabledtAttachmentSummary.BuyersHouseNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuyersHouseNumberNull() {
                this[this.tabledtAttachmentSummary.BuyersHouseNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyersPhoneNumberNull() {
                return this.IsNull(this.tabledtAttachmentSummary.BuyersPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuyersPhoneNumberNull() {
                this[this.tabledtAttachmentSummary.BuyersPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTotalNull() {
                return this.IsNull(this.tabledtAttachmentSummary.SalesTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTotalNull() {
                this[this.tabledtAttachmentSummary.SalesTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesVATNull() {
                return this.IsNull(this.tabledtAttachmentSummary.SalesVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesVATNull() {
                this[this.tabledtAttachmentSummary.SalesVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesGrandTotalNull() {
                return this.IsNull(this.tabledtAttachmentSummary.SalesGrandTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesGrandTotalNull() {
                this[this.tabledtAttachmentSummary.SalesGrandTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesWithHoldingNull() {
                return this.IsNull(this.tabledtAttachmentSummary.SalesWithHoldingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesWithHoldingNull() {
                this[this.tabledtAttachmentSummary.SalesWithHoldingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesNetPayNull() {
                return this.IsNull(this.tabledtAttachmentSummary.SalesNetPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesNetPayNull() {
                this[this.tabledtAttachmentSummary.SalesNetPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesAmountInWordNull() {
                return this.IsNull(this.tabledtAttachmentSummary.SalesAmountInWordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesAmountInWordNull() {
                this[this.tabledtAttachmentSummary.SalesAmountInWordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesPaymentMethodNull() {
                return this.IsNull(this.tabledtAttachmentSummary.SalesPaymentMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesPaymentMethodNull() {
                this[this.tabledtAttachmentSummary.SalesPaymentMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMRCNull() {
                return this.IsNull(this.tabledtAttachmentSummary.MRCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMRCNull() {
                this[this.tabledtAttachmentSummary.MRCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoteNull() {
                return this.IsNull(this.tabledtAttachmentSummary.NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoteNull() {
                this[this.tabledtAttachmentSummary.NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumberOfRePrintNull() {
                return this.IsNull(this.tabledtAttachmentSummary.numberOfRePrintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumberOfRePrintNull() {
                this[this.tabledtAttachmentSummary.numberOfRePrintColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtSalesDetailRow : global::System.Data.DataRow {
            
            private dtSalesDetailDataTable tabledtSalesDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSalesDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtSalesDetail = ((dtSalesDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salesDetailId {
                get {
                    try {
                        return ((string)(this[this.tabledtSalesDetail.salesDetailIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salesDetailId\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.salesDetailIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salesDetailStation {
                get {
                    try {
                        return ((string)(this[this.tabledtSalesDetail.salesDetailStationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salesDetailStation\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.salesDetailStationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salesDetailNode {
                get {
                    try {
                        return ((string)(this[this.tabledtSalesDetail.salesDetailNodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salesDetailNode\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.salesDetailNodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salesID {
                get {
                    try {
                        return ((string)(this[this.tabledtSalesDetail.salesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salesID\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.salesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item_id {
                get {
                    try {
                        return ((string)(this[this.tabledtSalesDetail.item_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'item_id\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.item_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string locatorFromId {
                get {
                    try {
                        return ((string)(this[this.tabledtSalesDetail.locatorFromIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'locatorFromId\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.locatorFromIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Sn_ {
                get {
                    try {
                        return ((string)(this[this.tabledtSalesDetail._Sn_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sn.\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail._Sn_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabledtSalesDetail.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tabledtSalesDetail.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tabledtSalesDetail.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabledtSalesDetail.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabledtSalesDetail.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tabledtSalesDetail.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'dtSalesDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSalesDetail.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalesDetailIdNull() {
                return this.IsNull(this.tabledtSalesDetail.salesDetailIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalesDetailIdNull() {
                this[this.tabledtSalesDetail.salesDetailIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalesDetailStationNull() {
                return this.IsNull(this.tabledtSalesDetail.salesDetailStationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalesDetailStationNull() {
                this[this.tabledtSalesDetail.salesDetailStationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalesDetailNodeNull() {
                return this.IsNull(this.tabledtSalesDetail.salesDetailNodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalesDetailNodeNull() {
                this[this.tabledtSalesDetail.salesDetailNodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalesIDNull() {
                return this.IsNull(this.tabledtSalesDetail.salesIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalesIDNull() {
                this[this.tabledtSalesDetail.salesIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isitem_idNull() {
                return this.IsNull(this.tabledtSalesDetail.item_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setitem_idNull() {
                this[this.tabledtSalesDetail.item_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocatorFromIdNull() {
                return this.IsNull(this.tabledtSalesDetail.locatorFromIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocatorFromIdNull() {
                this[this.tabledtSalesDetail.locatorFromIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Sn_Null() {
                return this.IsNull(this.tabledtSalesDetail._Sn_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_Sn_Null() {
                this[this.tabledtSalesDetail._Sn_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabledtSalesDetail.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabledtSalesDetail.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tabledtSalesDetail.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tabledtSalesDetail.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tabledtSalesDetail.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tabledtSalesDetail.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tabledtSalesDetail.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tabledtSalesDetail.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tabledtSalesDetail.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tabledtSalesDetail.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tabledtSalesDetail.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tabledtSalesDetail.CommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtDispatchDetailRow : global::System.Data.DataRow {
            
            private dtDispatchDetailDataTable tabledtDispatchDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtDispatchDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtDispatchDetail = ((dtDispatchDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salesDetailId {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail.salesDetailIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salesDetailId\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail.salesDetailIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salesDetailStation {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail.salesDetailStationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salesDetailStation\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail.salesDetailStationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salesDetailNode {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail.salesDetailNodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salesDetailNode\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail.salesDetailNodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salesID {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail.salesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salesID\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail.salesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item_id {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail.item_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'item_id\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail.item_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string locatorFromId {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail.locatorFromIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'locatorFromId\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail.locatorFromIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Sn_ {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail._Sn_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sn.\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail._Sn_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchDetail.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark\' in table \'dtDispatchDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchDetail.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalesDetailIdNull() {
                return this.IsNull(this.tabledtDispatchDetail.salesDetailIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalesDetailIdNull() {
                this[this.tabledtDispatchDetail.salesDetailIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalesDetailStationNull() {
                return this.IsNull(this.tabledtDispatchDetail.salesDetailStationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalesDetailStationNull() {
                this[this.tabledtDispatchDetail.salesDetailStationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalesDetailNodeNull() {
                return this.IsNull(this.tabledtDispatchDetail.salesDetailNodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalesDetailNodeNull() {
                this[this.tabledtDispatchDetail.salesDetailNodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalesIDNull() {
                return this.IsNull(this.tabledtDispatchDetail.salesIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalesIDNull() {
                this[this.tabledtDispatchDetail.salesIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isitem_idNull() {
                return this.IsNull(this.tabledtDispatchDetail.item_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setitem_idNull() {
                this[this.tabledtDispatchDetail.item_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocatorFromIdNull() {
                return this.IsNull(this.tabledtDispatchDetail.locatorFromIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocatorFromIdNull() {
                this[this.tabledtDispatchDetail.locatorFromIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Sn_Null() {
                return this.IsNull(this.tabledtDispatchDetail._Sn_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_Sn_Null() {
                this[this.tabledtDispatchDetail._Sn_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabledtDispatchDetail.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabledtDispatchDetail.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tabledtDispatchDetail.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tabledtDispatchDetail.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tabledtDispatchDetail.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tabledtDispatchDetail.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tabledtDispatchDetail.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tabledtDispatchDetail.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tabledtDispatchDetail.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tabledtDispatchDetail.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtDispatchSummaryRow : global::System.Data.DataRow {
            
            private dtDispatchSummaryDataTable tabledtDispatchSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtDispatchSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtDispatchSummary = ((dtDispatchSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DocumentName {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchSummary.DocumentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentName\' in table \'dtDispatchSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchSummary.DocumentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryOrderNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchSummary.DeliveryOrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryOrderNumber\' in table \'dtDispatchSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledtDispatchSummary.DeliveryOrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DispatchFrom {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchSummary.DispatchFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DispatchFrom\' in table \'dtDispatchSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchSummary.DispatchFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string numberOfRePrint {
                get {
                    try {
                        return ((string)(this[this.tabledtDispatchSummary.numberOfRePrintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numberOfRePrint\' in table \'dtDispatchSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDispatchSummary.numberOfRePrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentNameNull() {
                return this.IsNull(this.tabledtDispatchSummary.DocumentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentNameNull() {
                this[this.tabledtDispatchSummary.DocumentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryOrderNumberNull() {
                return this.IsNull(this.tabledtDispatchSummary.DeliveryOrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryOrderNumberNull() {
                this[this.tabledtDispatchSummary.DeliveryOrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDispatchFromNull() {
                return this.IsNull(this.tabledtDispatchSummary.DispatchFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDispatchFromNull() {
                this[this.tabledtDispatchSummary.DispatchFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumberOfRePrintNull() {
                return this.IsNull(this.tabledtDispatchSummary.numberOfRePrintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumberOfRePrintNull() {
                this[this.tabledtDispatchSummary.numberOfRePrintColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtSaleDepartmentInfoRow : global::System.Data.DataRow {
            
            private dtSaleDepartmentInfoDataTable tabledtSaleDepartmentInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSaleDepartmentInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtSaleDepartmentInfo = ((dtSaleDepartmentInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubCity {
                get {
                    try {
                        return ((string)(this[this.tabledtSaleDepartmentInfo.SubCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCity\' in table \'dtSaleDepartmentInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaleDepartmentInfo.SubCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kebele {
                get {
                    try {
                        return ((string)(this[this.tabledtSaleDepartmentInfo.kebeleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kebele\' in table \'dtSaleDepartmentInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaleDepartmentInfo.kebeleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HouseNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtSaleDepartmentInfo.HouseNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HouseNumber\' in table \'dtSaleDepartmentInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaleDepartmentInfo.HouseNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VATRegistrationNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtSaleDepartmentInfo.VATRegistrationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATRegistrationNumber\' in table \'dtSaleDepartmentInfo\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaleDepartmentInfo.VATRegistrationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TINNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtSaleDepartmentInfo.TINNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TINNumber\' in table \'dtSaleDepartmentInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaleDepartmentInfo.TINNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateRegistered {
                get {
                    try {
                        return ((string)(this[this.tabledtSaleDepartmentInfo.DateRegisteredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateRegistered\' in table \'dtSaleDepartmentInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaleDepartmentInfo.DateRegisteredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubCityNull() {
                return this.IsNull(this.tabledtSaleDepartmentInfo.SubCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubCityNull() {
                this[this.tabledtSaleDepartmentInfo.SubCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskebeleNull() {
                return this.IsNull(this.tabledtSaleDepartmentInfo.kebeleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkebeleNull() {
                this[this.tabledtSaleDepartmentInfo.kebeleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHouseNumberNull() {
                return this.IsNull(this.tabledtSaleDepartmentInfo.HouseNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHouseNumberNull() {
                this[this.tabledtSaleDepartmentInfo.HouseNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATRegistrationNumberNull() {
                return this.IsNull(this.tabledtSaleDepartmentInfo.VATRegistrationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATRegistrationNumberNull() {
                this[this.tabledtSaleDepartmentInfo.VATRegistrationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTINNumberNull() {
                return this.IsNull(this.tabledtSaleDepartmentInfo.TINNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTINNumberNull() {
                this[this.tabledtSaleDepartmentInfo.TINNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateRegisteredNull() {
                return this.IsNull(this.tabledtSaleDepartmentInfo.DateRegisteredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateRegisteredNull() {
                this[this.tabledtSaleDepartmentInfo.DateRegisteredColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtRefundSummaryRow : global::System.Data.DataRow {
            
            private dtRefundSummaryDataTable tabledtRefundSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtRefundSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtRefundSummary = ((dtRefundSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string salesId {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundSummary.salesIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salesId\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.salesIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refundId {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundSummary.refundIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refundId\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.refundIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refundStation {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundSummary.refundStationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refundStation\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.refundStationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refundNode {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundSummary.refundNodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refundNode\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.refundNodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refundNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundSummary.refundNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refundNumber\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.refundNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RFNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundSummary.RFNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RFNumber\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.RFNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refundDateAndTime {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundSummary.refundDateAndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refundDateAndTime\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.refundDateAndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RefundTotal {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRefundSummary.RefundTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefundTotal\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.RefundTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RefundVAT {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRefundSummary.RefundVATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefundVAT\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.RefundVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RefundGrandTotal {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRefundSummary.RefundGrandTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefundGrandTotal\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.RefundGrandTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RefundWithHolding {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRefundSummary.RefundWithHoldingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefundWithHolding\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.RefundWithHoldingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RefundNetPay {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRefundSummary.RefundNetPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefundNetPay\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.RefundNetPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RefundAmountInWord {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundSummary.RefundAmountInWordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefundAmountInWord\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.RefundAmountInWordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refundReason {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundSummary.refundReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refundReason\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.refundReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refundBy {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundSummary.refundByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refundBy\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.refundByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string numberOfRePrint {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundSummary.numberOfRePrintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numberOfRePrint\' in table \'dtRefundSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundSummary.numberOfRePrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalesIdNull() {
                return this.IsNull(this.tabledtRefundSummary.salesIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalesIdNull() {
                this[this.tabledtRefundSummary.salesIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefundIdNull() {
                return this.IsNull(this.tabledtRefundSummary.refundIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefundIdNull() {
                this[this.tabledtRefundSummary.refundIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefundStationNull() {
                return this.IsNull(this.tabledtRefundSummary.refundStationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefundStationNull() {
                this[this.tabledtRefundSummary.refundStationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefundNodeNull() {
                return this.IsNull(this.tabledtRefundSummary.refundNodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefundNodeNull() {
                this[this.tabledtRefundSummary.refundNodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefundNumberNull() {
                return this.IsNull(this.tabledtRefundSummary.refundNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefundNumberNull() {
                this[this.tabledtRefundSummary.refundNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRFNumberNull() {
                return this.IsNull(this.tabledtRefundSummary.RFNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRFNumberNull() {
                this[this.tabledtRefundSummary.RFNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefundDateAndTimeNull() {
                return this.IsNull(this.tabledtRefundSummary.refundDateAndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefundDateAndTimeNull() {
                this[this.tabledtRefundSummary.refundDateAndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefundTotalNull() {
                return this.IsNull(this.tabledtRefundSummary.RefundTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefundTotalNull() {
                this[this.tabledtRefundSummary.RefundTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefundVATNull() {
                return this.IsNull(this.tabledtRefundSummary.RefundVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefundVATNull() {
                this[this.tabledtRefundSummary.RefundVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefundGrandTotalNull() {
                return this.IsNull(this.tabledtRefundSummary.RefundGrandTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefundGrandTotalNull() {
                this[this.tabledtRefundSummary.RefundGrandTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefundWithHoldingNull() {
                return this.IsNull(this.tabledtRefundSummary.RefundWithHoldingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefundWithHoldingNull() {
                this[this.tabledtRefundSummary.RefundWithHoldingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefundNetPayNull() {
                return this.IsNull(this.tabledtRefundSummary.RefundNetPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefundNetPayNull() {
                this[this.tabledtRefundSummary.RefundNetPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefundAmountInWordNull() {
                return this.IsNull(this.tabledtRefundSummary.RefundAmountInWordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefundAmountInWordNull() {
                this[this.tabledtRefundSummary.RefundAmountInWordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefundReasonNull() {
                return this.IsNull(this.tabledtRefundSummary.refundReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefundReasonNull() {
                this[this.tabledtRefundSummary.refundReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefundByNull() {
                return this.IsNull(this.tabledtRefundSummary.refundByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefundByNull() {
                this[this.tabledtRefundSummary.refundByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumberOfRePrintNull() {
                return this.IsNull(this.tabledtRefundSummary.numberOfRePrintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumberOfRePrintNull() {
                this[this.tabledtRefundSummary.numberOfRePrintColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtPaymentSummaryRow : global::System.Data.DataRow {
            
            private dtPaymentSummaryDataTable tabledtPaymentSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtPaymentSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtPaymentSummary = ((dtPaymentSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_PAYMENT_ID {
                get {
                    return ((string)(this[this.tabledtPaymentSummary.C_PAYMENT_IDColumn]));
                }
                set {
                    this[this.tabledtPaymentSummary.C_PAYMENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Store {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentSummary.StoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Store\' in table \'dtPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentSummary.StoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Received_From {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentSummary.Received_FromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Received From\' in table \'dtPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentSummary.Received_FromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtPaymentSummary.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'dtPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentSummary.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reference {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentSummary.ReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reference\' in table \'dtPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentSummary.ReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tender_Type {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentSummary.Tender_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tender Type\' in table \'dtPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentSummary.Tender_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Tender_No_ {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentSummary._Tender_No_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tender No.\' in table \'dtPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentSummary._Tender_No_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Other_Income {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentSummary.Other_IncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Other Income\' in table \'dtPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentSummary.Other_IncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabledtPaymentSummary.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'dtPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentSummary.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount_In_Word {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentSummary.Amount_In_WordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount In Word\' in table \'dtPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentSummary.Amount_In_WordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentSummary.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'dtPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentSummary.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnAllocated_Amt {
                get {
                    try {
                        return ((decimal)(this[this.tabledtPaymentSummary.UnAllocated_AmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnAllocated Amt\' in table \'dtPaymentSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentSummary.UnAllocated_AmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreNull() {
                return this.IsNull(this.tabledtPaymentSummary.StoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreNull() {
                this[this.tabledtPaymentSummary.StoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceived_FromNull() {
                return this.IsNull(this.tabledtPaymentSummary.Received_FromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceived_FromNull() {
                this[this.tabledtPaymentSummary.Received_FromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tabledtPaymentSummary.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tabledtPaymentSummary.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNull() {
                return this.IsNull(this.tabledtPaymentSummary.ReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNull() {
                this[this.tabledtPaymentSummary.ReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTender_TypeNull() {
                return this.IsNull(this.tabledtPaymentSummary.Tender_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTender_TypeNull() {
                this[this.tabledtPaymentSummary.Tender_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Tender_No_Null() {
                return this.IsNull(this.tabledtPaymentSummary._Tender_No_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_Tender_No_Null() {
                this[this.tabledtPaymentSummary._Tender_No_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOther_IncomeNull() {
                return this.IsNull(this.tabledtPaymentSummary.Other_IncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOther_IncomeNull() {
                this[this.tabledtPaymentSummary.Other_IncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabledtPaymentSummary.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabledtPaymentSummary.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmount_In_WordNull() {
                return this.IsNull(this.tabledtPaymentSummary.Amount_In_WordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmount_In_WordNull() {
                this[this.tabledtPaymentSummary.Amount_In_WordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabledtPaymentSummary.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabledtPaymentSummary.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnAllocated_AmtNull() {
                return this.IsNull(this.tabledtPaymentSummary.UnAllocated_AmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnAllocated_AmtNull() {
                this[this.tabledtPaymentSummary.UnAllocated_AmtColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtPaymentDetailRow : global::System.Data.DataRow {
            
            private dtPaymentDetailDataTable tabledtPaymentDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtPaymentDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtPaymentDetail = ((dtPaymentDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_PAYMENTALLOCATE_ID {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentDetail.C_PAYMENTALLOCATE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C_PAYMENTALLOCATE_ID\' in table \'dtPaymentDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtPaymentDetail.C_PAYMENTALLOCATE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_PAYMENT_ID {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentDetail.C_PAYMENT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C_PAYMENT_ID\' in table \'dtPaymentDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentDetail.C_PAYMENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sn {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentDetail.SnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sn\' in table \'dtPaymentDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentDetail.SnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Invoice {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentDetail.InvoiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invoice\' in table \'dtPaymentDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentDetail.InvoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Dated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtPaymentDetail.DatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dated\' in table \'dtPaymentDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentDetail.DatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Invoiced {
                get {
                    try {
                        return ((decimal)(this[this.tabledtPaymentDetail.InvoicedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invoiced\' in table \'dtPaymentDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentDetail.InvoicedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Pending {
                get {
                    try {
                        return ((decimal)(this[this.tabledtPaymentDetail.PendingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pending\' in table \'dtPaymentDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentDetail.PendingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Paid {
                get {
                    try {
                        return ((decimal)(this[this.tabledtPaymentDetail.PaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Paid\' in table \'dtPaymentDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentDetail.PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Remaining {
                get {
                    try {
                        return ((decimal)(this[this.tabledtPaymentDetail.RemainingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remaining\' in table \'dtPaymentDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentDetail.RemainingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabledtPaymentDetail.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'dtPaymentDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPaymentDetail.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC_PAYMENTALLOCATE_IDNull() {
                return this.IsNull(this.tabledtPaymentDetail.C_PAYMENTALLOCATE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC_PAYMENTALLOCATE_IDNull() {
                this[this.tabledtPaymentDetail.C_PAYMENTALLOCATE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC_PAYMENT_IDNull() {
                return this.IsNull(this.tabledtPaymentDetail.C_PAYMENT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC_PAYMENT_IDNull() {
                this[this.tabledtPaymentDetail.C_PAYMENT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSnNull() {
                return this.IsNull(this.tabledtPaymentDetail.SnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSnNull() {
                this[this.tabledtPaymentDetail.SnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNull() {
                return this.IsNull(this.tabledtPaymentDetail.InvoiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNull() {
                this[this.tabledtPaymentDetail.InvoiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatedNull() {
                return this.IsNull(this.tabledtPaymentDetail.DatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatedNull() {
                this[this.tabledtPaymentDetail.DatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoicedNull() {
                return this.IsNull(this.tabledtPaymentDetail.InvoicedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoicedNull() {
                this[this.tabledtPaymentDetail.InvoicedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPendingNull() {
                return this.IsNull(this.tabledtPaymentDetail.PendingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPendingNull() {
                this[this.tabledtPaymentDetail.PendingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidNull() {
                return this.IsNull(this.tabledtPaymentDetail.PaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidNull() {
                this[this.tabledtPaymentDetail.PaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemainingNull() {
                return this.IsNull(this.tabledtPaymentDetail.RemainingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemainingNull() {
                this[this.tabledtPaymentDetail.RemainingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabledtPaymentDetail.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabledtPaymentDetail.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtCashDepositRow : global::System.Data.DataRow {
            
            private dtCashDepositDataTable tabledtCashDeposit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCashDepositRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCashDeposit = ((dtCashDepositDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_CASH_ID {
                get {
                    return ((string)(this[this.tabledtCashDeposit.C_CASH_IDColumn]));
                }
                set {
                    this[this.tabledtCashDeposit.C_CASH_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AD_ORG_ID {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDeposit.AD_ORG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AD_ORG_ID\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.AD_ORG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SN {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDeposit.SNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SN\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.SNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDeposit.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDeposit.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime STATEMENTDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtCashDeposit.STATEMENTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATEMENTDATE\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.STATEMENTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ENDINGBALANCE {
                get {
                    try {
                        return ((decimal)(this[this.tabledtCashDeposit.ENDINGBALANCEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENDINGBALANCE\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.ENDINGBALANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal STATEMENTDIFFERENCE {
                get {
                    try {
                        return ((decimal)(this[this.tabledtCashDeposit.STATEMENTDIFFERENCEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATEMENTDIFFERENCE\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.STATEMENTDIFFERENCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_BANKACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDeposit.C_BANKACCOUNT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C_BANKACCOUNT_ID\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.C_BANKACCOUNT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANKACCOUNT {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDeposit.BANKACCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BANKACCOUNT\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.BANKACCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDeposit.STOREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STORE\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.STOREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateRange {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDeposit.DateRangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateRange\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.DateRangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OVERUNDER {
                get {
                    try {
                        return ((decimal)(this[this.tabledtCashDeposit.OVERUNDERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OVERUNDER\' in table \'dtCashDeposit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDeposit.OVERUNDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAD_ORG_IDNull() {
                return this.IsNull(this.tabledtCashDeposit.AD_ORG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAD_ORG_IDNull() {
                this[this.tabledtCashDeposit.AD_ORG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSNNull() {
                return this.IsNull(this.tabledtCashDeposit.SNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSNNull() {
                this[this.tabledtCashDeposit.SNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tabledtCashDeposit.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tabledtCashDeposit.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tabledtCashDeposit.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tabledtCashDeposit.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATEMENTDATENull() {
                return this.IsNull(this.tabledtCashDeposit.STATEMENTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATEMENTDATENull() {
                this[this.tabledtCashDeposit.STATEMENTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENDINGBALANCENull() {
                return this.IsNull(this.tabledtCashDeposit.ENDINGBALANCEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENDINGBALANCENull() {
                this[this.tabledtCashDeposit.ENDINGBALANCEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATEMENTDIFFERENCENull() {
                return this.IsNull(this.tabledtCashDeposit.STATEMENTDIFFERENCEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATEMENTDIFFERENCENull() {
                this[this.tabledtCashDeposit.STATEMENTDIFFERENCEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC_BANKACCOUNT_IDNull() {
                return this.IsNull(this.tabledtCashDeposit.C_BANKACCOUNT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC_BANKACCOUNT_IDNull() {
                this[this.tabledtCashDeposit.C_BANKACCOUNT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBANKACCOUNTNull() {
                return this.IsNull(this.tabledtCashDeposit.BANKACCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBANKACCOUNTNull() {
                this[this.tabledtCashDeposit.BANKACCOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORENull() {
                return this.IsNull(this.tabledtCashDeposit.STOREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORENull() {
                this[this.tabledtCashDeposit.STOREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateRangeNull() {
                return this.IsNull(this.tabledtCashDeposit.DateRangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateRangeNull() {
                this[this.tabledtCashDeposit.DateRangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOVERUNDERNull() {
                return this.IsNull(this.tabledtCashDeposit.OVERUNDERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOVERUNDERNull() {
                this[this.tabledtCashDeposit.OVERUNDERColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtCashDepositDtlSrcRow : global::System.Data.DataRow {
            
            private dtCashDepositDtlSrcDataTable tabledtCashDepositDtlSrc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCashDepositDtlSrcRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCashDepositDtlSrc = ((dtCashDepositDtlSrcDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_CASHLINESOURCE_ID {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDepositDtlSrc.C_CASHLINESOURCE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C_CASHLINESOURCE_ID\' in table \'dtCashDepositDtlSrc\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledtCashDepositDtlSrc.C_CASHLINESOURCE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_CASHLINE_ID {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDepositDtlSrc.C_CASHLINE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C_CASHLINE_ID\' in table \'dtCashDepositDtlSrc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDepositDtlSrc.C_CASHLINE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOURCETYPE {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDepositDtlSrc.SOURCETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOURCETYPE\' in table \'dtCashDepositDtlSrc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDepositDtlSrc.SOURCETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC_CASHLINESOURCE_IDNull() {
                return this.IsNull(this.tabledtCashDepositDtlSrc.C_CASHLINESOURCE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC_CASHLINESOURCE_IDNull() {
                this[this.tabledtCashDepositDtlSrc.C_CASHLINESOURCE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC_CASHLINE_IDNull() {
                return this.IsNull(this.tabledtCashDepositDtlSrc.C_CASHLINE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC_CASHLINE_IDNull() {
                this[this.tabledtCashDepositDtlSrc.C_CASHLINE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOURCETYPENull() {
                return this.IsNull(this.tabledtCashDepositDtlSrc.SOURCETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOURCETYPENull() {
                this[this.tabledtCashDepositDtlSrc.SOURCETYPEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtCashDepositDetailRow : global::System.Data.DataRow {
            
            private dtCashDepositDetailDataTable tabledtCashDepositDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCashDepositDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCashDepositDetail = ((dtCashDepositDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_CASHLINE_ID {
                get {
                    return ((string)(this[this.tabledtCashDepositDetail.C_CASHLINE_IDColumn]));
                }
                set {
                    this[this.tabledtCashDepositDetail.C_CASHLINE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_CASH_ID {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDepositDetail.C_CASH_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C_CASH_ID\' in table \'dtCashDepositDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDepositDetail.C_CASH_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DES_CASHLINE {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDepositDetail.DES_CASHLINEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DES_CASHLINE\' in table \'dtCashDepositDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDepositDetail.DES_CASHLINEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AMOUNT_CASHLINE {
                get {
                    try {
                        return ((decimal)(this[this.tabledtCashDepositDetail.AMOUNT_CASHLINEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT_CASHLINE\' in table \'dtCashDepositDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDepositDetail.AMOUNT_CASHLINEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENDERTYPE {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDepositDetail.TENDERTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENDERTYPE\' in table \'dtCashDepositDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDepositDetail.TENDERTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHECKNO {
                get {
                    try {
                        return ((string)(this[this.tabledtCashDepositDetail.CHECKNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHECKNO\' in table \'dtCashDepositDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCashDepositDetail.CHECKNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC_CASH_IDNull() {
                return this.IsNull(this.tabledtCashDepositDetail.C_CASH_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC_CASH_IDNull() {
                this[this.tabledtCashDepositDetail.C_CASH_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDES_CASHLINENull() {
                return this.IsNull(this.tabledtCashDepositDetail.DES_CASHLINEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDES_CASHLINENull() {
                this[this.tabledtCashDepositDetail.DES_CASHLINEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAMOUNT_CASHLINENull() {
                return this.IsNull(this.tabledtCashDepositDetail.AMOUNT_CASHLINEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAMOUNT_CASHLINENull() {
                this[this.tabledtCashDepositDetail.AMOUNT_CASHLINEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENDERTYPENull() {
                return this.IsNull(this.tabledtCashDepositDetail.TENDERTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENDERTYPENull() {
                this[this.tabledtCashDepositDetail.TENDERTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHECKNONull() {
                return this.IsNull(this.tabledtCashDepositDetail.CHECKNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHECKNONull() {
                this[this.tabledtCashDepositDetail.CHECKNOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtRefundDetailRow : global::System.Data.DataRow {
            
            private dtRefundDetailDataTable tabledtRefundDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtRefundDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtRefundDetail = ((dtRefundDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refundDetailId {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundDetail.refundDetailIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refundDetailId\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.refundDetailIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refundDetailStation {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundDetail.refundDetailStationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refundDetailStation\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.refundDetailStationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refundDetailNode {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundDetail.refundDetailNodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refundDetailNode\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.refundDetailNodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refundID {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundDetail.refundIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refundID\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.refundIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string item_id {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundDetail.item_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'item_id\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.item_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string locatorFromId {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundDetail.locatorFromIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'locatorFromId\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.locatorFromIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Sn_ {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundDetail._Sn_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sn.\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail._Sn_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundDetail.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundDetail.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundDetail.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRefundDetail.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRefundDetail.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tabledtRefundDetail.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'dtRefundDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtRefundDetail.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefundDetailIdNull() {
                return this.IsNull(this.tabledtRefundDetail.refundDetailIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefundDetailIdNull() {
                this[this.tabledtRefundDetail.refundDetailIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefundDetailStationNull() {
                return this.IsNull(this.tabledtRefundDetail.refundDetailStationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefundDetailStationNull() {
                this[this.tabledtRefundDetail.refundDetailStationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefundDetailNodeNull() {
                return this.IsNull(this.tabledtRefundDetail.refundDetailNodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefundDetailNodeNull() {
                this[this.tabledtRefundDetail.refundDetailNodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefundIDNull() {
                return this.IsNull(this.tabledtRefundDetail.refundIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefundIDNull() {
                this[this.tabledtRefundDetail.refundIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isitem_idNull() {
                return this.IsNull(this.tabledtRefundDetail.item_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setitem_idNull() {
                this[this.tabledtRefundDetail.item_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocatorFromIdNull() {
                return this.IsNull(this.tabledtRefundDetail.locatorFromIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocatorFromIdNull() {
                this[this.tabledtRefundDetail.locatorFromIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Sn_Null() {
                return this.IsNull(this.tabledtRefundDetail._Sn_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_Sn_Null() {
                this[this.tabledtRefundDetail._Sn_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabledtRefundDetail.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabledtRefundDetail.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tabledtRefundDetail.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tabledtRefundDetail.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tabledtRefundDetail.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tabledtRefundDetail.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tabledtRefundDetail.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tabledtRefundDetail.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tabledtRefundDetail.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tabledtRefundDetail.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tabledtRefundDetail.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tabledtRefundDetail.CommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtOpenInvoiceRow : global::System.Data.DataRow {
            
            private dtOpenInvoiceDataTable tabledtOpenInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtOpenInvoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtOpenInvoice = ((dtOpenInvoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    return ((string)(this[this.tabledtOpenInvoice.IDColumn]));
                }
                set {
                    this[this.tabledtOpenInvoice.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Station {
                get {
                    return ((string)(this[this.tabledtOpenInvoice.StationColumn]));
                }
                set {
                    this[this.tabledtOpenInvoice.StationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Node {
                get {
                    try {
                        return ((string)(this[this.tabledtOpenInvoice.NodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Node\' in table \'dtOpenInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOpenInvoice.NodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Organisation {
                get {
                    try {
                        return ((string)(this[this.tabledtOpenInvoice.OrganisationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Organisation\' in table \'dtOpenInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOpenInvoice.OrganisationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tabledtOpenInvoice.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'dtOpenInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOpenInvoice.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateSold {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtOpenInvoice.DateSoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateSold\' in table \'dtOpenInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOpenInvoice.DateSoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Document {
                get {
                    try {
                        return ((string)(this[this.tabledtOpenInvoice.DocumentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Document\' in table \'dtOpenInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOpenInvoice.DocumentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalesAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabledtOpenInvoice.SalesAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesAmount\' in table \'dtOpenInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOpenInvoice.SalesAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RemainingAmount {
                get {
                    try {
                        return ((decimal)(this[this.tabledtOpenInvoice.RemainingAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemainingAmount\' in table \'dtOpenInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOpenInvoice.RemainingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNodeNull() {
                return this.IsNull(this.tabledtOpenInvoice.NodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNodeNull() {
                this[this.tabledtOpenInvoice.NodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrganisationNull() {
                return this.IsNull(this.tabledtOpenInvoice.OrganisationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrganisationNull() {
                this[this.tabledtOpenInvoice.OrganisationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tabledtOpenInvoice.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tabledtOpenInvoice.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateSoldNull() {
                return this.IsNull(this.tabledtOpenInvoice.DateSoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateSoldNull() {
                this[this.tabledtOpenInvoice.DateSoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentNull() {
                return this.IsNull(this.tabledtOpenInvoice.DocumentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentNull() {
                this[this.tabledtOpenInvoice.DocumentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesAmountNull() {
                return this.IsNull(this.tabledtOpenInvoice.SalesAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesAmountNull() {
                this[this.tabledtOpenInvoice.SalesAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemainingAmountNull() {
                return this.IsNull(this.tabledtOpenInvoice.RemainingAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemainingAmountNull() {
                this[this.tabledtOpenInvoice.RemainingAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtUserInfoRow : global::System.Data.DataRow {
            
            private dtUserInfoDataTable tabledtUserInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtUserInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtUserInfo = ((dtUserInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullUserName {
                get {
                    try {
                        return ((string)(this[this.tabledtUserInfo.FullUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullUserName\' in table \'dtUserInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtUserInfo.FullUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullUserNameNull() {
                return this.IsNull(this.tabledtUserInfo.FullUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullUserNameNull() {
                this[this.tabledtUserInfo.FullUserNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtAttachmentSummaryRowChangeEvent : global::System.EventArgs {
            
            private dtAttachmentSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAttachmentSummaryRowChangeEvent(dtAttachmentSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAttachmentSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtSalesDetailRowChangeEvent : global::System.EventArgs {
            
            private dtSalesDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalesDetailRowChangeEvent(dtSalesDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalesDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtDispatchDetailRowChangeEvent : global::System.EventArgs {
            
            private dtDispatchDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchDetailRowChangeEvent(dtDispatchDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtDispatchSummaryRowChangeEvent : global::System.EventArgs {
            
            private dtDispatchSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchSummaryRowChangeEvent(dtDispatchSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDispatchSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtSaleDepartmentInfoRowChangeEvent : global::System.EventArgs {
            
            private dtSaleDepartmentInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaleDepartmentInfoRowChangeEvent(dtSaleDepartmentInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaleDepartmentInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtRefundSummaryRowChangeEvent : global::System.EventArgs {
            
            private dtRefundSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundSummaryRowChangeEvent(dtRefundSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtPaymentSummaryRowChangeEvent : global::System.EventArgs {
            
            private dtPaymentSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentSummaryRowChangeEvent(dtPaymentSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtPaymentDetailRowChangeEvent : global::System.EventArgs {
            
            private dtPaymentDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentDetailRowChangeEvent(dtPaymentDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPaymentDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtCashDepositRowChangeEvent : global::System.EventArgs {
            
            private dtCashDepositRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositRowChangeEvent(dtCashDepositRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtCashDepositDtlSrcRowChangeEvent : global::System.EventArgs {
            
            private dtCashDepositDtlSrcRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDtlSrcRowChangeEvent(dtCashDepositDtlSrcRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDtlSrcRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtCashDepositDetailRowChangeEvent : global::System.EventArgs {
            
            private dtCashDepositDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDetailRowChangeEvent(dtCashDepositDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCashDepositDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtRefundDetailRowChangeEvent : global::System.EventArgs {
            
            private dtRefundDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundDetailRowChangeEvent(dtRefundDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRefundDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtOpenInvoiceRowChangeEvent : global::System.EventArgs {
            
            private dtOpenInvoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOpenInvoiceRowChangeEvent(dtOpenInvoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOpenInvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtUserInfoRowChangeEvent : global::System.EventArgs {
            
            private dtUserInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtUserInfoRowChangeEvent(dtUserInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtUserInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591